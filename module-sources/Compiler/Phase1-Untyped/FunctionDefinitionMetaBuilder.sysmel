## Type definition builder.
__BootstrapCompiler__
    enterTopLevelNamespace;
    enterNamespaceNamed: #Std;
    enterNamespaceNamed: #MetaProgramming;
    addBindingNamed: #FunctionDefinitionMetaBuilder with: (__TypeBuilder__ newGCClassWithSuperclass: Std MetaProgramming NamedMetaBuilder slots: #{
        arguments: Std Reflection AST Node sharedArraySlice.
        resultTypeExpression: Std Reflection AST Node optional.
        body: Std Reflection AST Node optional.
    }).

Std MetaProgramming FunctionDefinitionMetaBuilder
    withSelector: #"()" addMethod: {:(Std MetaProgramming MethodDefinitionMetaBuilder)self :: Void |
        <metaBuilder>
        self hasSeenName: true.
        self arguments: Std Reflection AST Node sharedArraySlice basicNew.
        void
    };
    withSelector: #"():" addMethod: {:(Std MetaProgramming MethodDefinitionMetaBuilder)self :(Std Reflection AST Node)argumentsNode :: Void |
        <metaBuilder>
        self hasSeenName: true.
        self arguments: argumentsNode parseAsArgumentDefinitionNodes.
        void
    };
    withSelector: #=> addMethod: {:(Std MetaProgramming MethodDefinitionMetaBuilder)self :(Std Reflection AST Node)resultTypeExpression :: Void |
        <metaBuilder>
        self resultTypeExpression: resultTypeExpression.
        void
    };
    withSelector: #":=" addMethod: {:(Std MetaProgramming MethodDefinitionMetaBuilder)self :(Std Reflection AST Node)body :: Void |
        <metaBuilder>
        self body: body.
        self finish.
    };
    withSelector: #concretizeMetaBuilder addMethod: {:(Std MetaProgramming MethodDefinitionMetaBuilder)self :: Std Reflection AST Node |
        (Std Reflection AST FunctionDefinitionNode basicNewWithNamedSlots: #{
            sourcePosition: self metaContext sourcePosition.
            nameExpression: self nameExpression.
            arguments: self arguments.
            resultTypeExpression: self resultTypeExpression.
            body: self body.
            visibility: self programEntityAttributes visibility.
        })
    }.

Std MetaProgramming FlagMetaBuilder
    withSelector: #function addMethod: {:(Std MetaProgramming FlagMetaBuilder)self :: Void |
        <metaBuilder>
        self delegateToMetaBuilderClass: Std MetaProgramming FunctionDefinitionMetaBuilder.
        void
    }.

__BootstrapCompiler__
    enterTopLevelNamespace;
    addBindingNamed: #function with: {:(MacroInvocationContext)macroSelf :: Std Reflection AST MetaBuilderInstanceNode |
        <macro>
        <messageMethod>
        Std MetaProgramming FunctionDefinitionMetaBuilder nodeWithContext: macroSelf
    }.