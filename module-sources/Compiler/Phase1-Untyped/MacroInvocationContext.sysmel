__BootstrapCompiler__
    enterTopLevelNamespace;
    addBindingNamed: #MacroInvocationContext with: (__TypeBuilder__ newGCClassWithSuperclass: Object publicSlots: #{
        sourcePosition: Std Reflection SourcePosition.
        selfNode: Std Reflection AST Node optional.
        selfType: Type.
        astAnalyzer: Std Reflection Semantic ASTAnalyzer.
    }).

Std Reflection Semantic ASTAnalyzer
    withSelector: #makeMacroInvocationContextForIdentifierReferenceNode: addMethod: {:(Std Reflection Semantic ASTAnalyzer)self :(Std Reflection AST IdentifierReferenceNode)node :: MacroInvocationContext |
        MacroInvocationContext basicNewWithNamedSlots: #{
            sourcePosition: node sourcePosition.
            selfType: Void.
            astAnalyzer: self
        }
    };
    withSelector: #makeMacroInvocationContextForMessageSendNode: addMethod: {:(Std Reflection Semantic ASTAnalyzer)self :(Std Reflection AST MessageSendNode)node :: MacroInvocationContext |
        MacroInvocationContext basicNewWithNamedSlots: #{
            sourcePosition: node sourcePosition.
            selfNode: node receiver.
            selfType: (if: node receiver isNil then: {
                Void
            } else: {
                if: node receiver _ analyzedType isNil then: Void else: node receiver _ analyzedType _
            }).
            astAnalyzer: self
        }
    }.