## Type definition builder.
__BootstrapCompiler__
    enterTopLevelNamespace;
    enterNamespaceNamed: #Std;
    enterNamespaceNamed: #MetaProgramming;
    addBindingNamed: #MethodDefinitionMetaBuilder with: (__TypeBuilder__ newGCClassWithSuperclass: Std MetaProgramming MetaBuilder slots: #{
        hasSeenMethodPrototype: Boolean.
        selectorExpression: Std Reflection AST Node optional.
        arguments: Std Reflection AST Node sharedArraySlice.
        resultTypeExpression: Std Reflection AST Node optional.
        body: Std Reflection AST Node optional.
    }).

Std MetaProgramming MethodDefinitionMetaBuilder
    withSelector: #analyzeMessageSendNode:with: addMethod: {:(Std MetaProgramming MethodDefinitionMetaBuilder)self :(Std Reflection AST MessageSendNode)node :(Std Reflection Semantic ASTAnalyzer)analyzer :: Std Reflection AST Node |
        if: self hasSeenMethodPrototype not then: {
            self
                hasSeenMethodPrototype: true;
                selectorExpression: node selector;
                arguments: (node arguments collect: {:(Std Reflection AST Node)argumentNode :: Std Reflection AST Node |
                    argumentNode parseAsArgumentDefinitionNode
                }).
            node receiver _
        } else: {
            self analyzeMetaBuilderDirectMessageNode: node with: analyzer
        }
    };
    withSelector: #=> addMethod: {:(Std MetaProgramming MethodDefinitionMetaBuilder)self :(Std Reflection AST Node)resultTypeExpression :: Void |
        <metaBuilder>
        self resultTypeExpression: resultTypeExpression.
        void
    };
    withSelector: #":=" addMethod: {:(Std MetaProgramming MethodDefinitionMetaBuilder)self :(Std Reflection AST Node)body :: Void |
        <metaBuilder>
        self body: body.
        self finish.
    };
    withSelector: #concretizeMetaBuilder addMethod: {:(Std MetaProgramming MethodDefinitionMetaBuilder)self :: Std Reflection AST Node |
        (Std Reflection AST MethodDefinitionNode#{
            sourcePosition: self metaContext sourcePosition.
            selectorExpression: self selectorExpression.
            arguments: self arguments.
            resultTypeExpression: self resultTypeExpression.
            body: self body.
            visibility: self programEntityAttributes visibility.
        })
    }.

Std MetaProgramming FlagMetaBuilder
    withSelector: #method addMethod: {:(Std MetaProgramming FlagMetaBuilder)self :: Void |
        <metaBuilder>
        self delegateToMetaBuilderClass: Std MetaProgramming MethodDefinitionMetaBuilder.
        void
    }.
