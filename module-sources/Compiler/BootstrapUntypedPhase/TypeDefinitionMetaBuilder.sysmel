## Type definition builder.
__BootstrapCompiler__
    enterTopLevelNamespace;
    enterNamespaceNamed: #Std;
    enterNamespaceNamed: #MetaProgramming;
    addBindingNamed: #TypeDefinitionMetaBuilder with: (__TypeBuilder__ newGCClassWithSuperclass: Std MetaProgramming NamedMetaBuilder slots: #{
        supertypeExpression: Std Reflection AST Node optional.
        traitExpressions: Std Reflection AST Node arraySlice.
        bodyExpression: Std Reflection AST Node optional.
    }).

Std MetaProgramming TypeDefinitionMetaBuilder
    withSelector: #supertype: addMethod: {:(Std MetaProgramming NamespaceMetaBuilder)self :(Std Reflection AST Node)supertypeExpression :: Void |
        <metaBuilder>
        self supertypeExpression: supertypeExpression.
        void
    };
    withSelector: #definition: addMethod: {:(Std MetaProgramming NamespaceMetaBuilder)self :(Std Reflection AST Node)bodyExpression :: Void |
        <metaBuilder>
        self bodyExpression: bodyExpression.
        self finish.
        void
    };
    withSelector: #concretizeMetaBuilder addMethod: {:(Std MetaProgramming NamespaceMetaBuilder)self :: Std Reflection AST Node |
        (Std Reflection AST TypeDefinitionNode#{
            sourcePosition: self metaContext sourcePosition.
            nameExpression: self nameExpression.
            supertypeExpression: self supertypeExpression.
            traitExpressions: self traitExpressions.
            bodyExpression: self bodyExpression.
            visibility: self programEntityAttributes visibility.
        })
    }.
