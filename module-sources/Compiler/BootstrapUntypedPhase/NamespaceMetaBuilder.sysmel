## Let meta builder.
__BootstrapCompiler__
    enterTopLevelNamespace;
    enterNamespaceNamed: #Std;
    enterNamespaceNamed: #MetaProgramming;
    addBindingNamed: #NamespaceMetaBuilder with: (__TypeBuilder__ newGCClassWithSuperclass: Std MetaProgramming NamedMetaBuilder slots: #{
        bodyExpression: Std Reflection AST Node optional.
    }).

Std MetaProgramming NamespaceMetaBuilder
    withSelector: #"definition:" addMethod: {:(Std MetaProgramming NamespaceMetaBuilder)self :(Std Reflection AST Node)bodyExpression :: Void |
        <metaBuilder>
        self bodyExpression: bodyExpression.
        self finish.
        void
    };
    withSelector: #concretizeMetaBuilder addMethod: {:(Std MetaProgramming NamespaceMetaBuilder)self :: Std Reflection AST Node |
        (Std Reflection AST NamespaceDefinitionNode#{
            sourcePosition: self metaContext sourcePosition.
            nameExpression: self nameExpression.
            bodyExpression: self bodyExpression.
        })
    }.

__BootstrapCompiler__
    enterTopLevelNamespace;
    addBindingNamed: #namespace with: {:(MacroInvocationContext)macroSelf :: Std Reflection AST MetaBuilderInstanceNode |
        <macro>
        <messageMethod>
        Std MetaProgramming NamespaceMetaBuilder nodeWithContext: macroSelf
    }.
