Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expressionList
Rule 1     expressionList -> optionalExpression
Rule 2     expressionList -> expressionList DOT optionalExpression
Rule 3     optionalExpression -> <empty>
Rule 4     optionalExpression -> expression
Rule 5     primaryTerm -> IDENTIFIER
Rule 6     primaryTerm -> literal
Rule 7     primaryTerm -> block
Rule 8     primaryTerm -> makeDictionary
Rule 9     primaryTerm -> makeByteArray
Rule 10    primaryTerm -> LEFT_PARENT RIGHT_PARENT
Rule 11    primaryTerm -> LEFT_PARENT expression RIGHT_PARENT
Rule 12    primaryExpression -> primaryTerm
Rule 13    primaryExpression -> QUOTE primaryTerm
Rule 14    primaryExpression -> QUASI_QUOTE primaryTerm
Rule 15    primaryExpression -> QUASI_UNQUOTE primaryTerm
Rule 16    primaryExpression -> SPLICE primaryTerm
Rule 17    primaryExpression -> primaryExpression expandableIdentifier
Rule 18    primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
Rule 19    primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
Rule 20    primaryExpression -> primaryExpression block
Rule 21    primaryExpression -> primaryExpression makeDictionary
Rule 22    primaryExpression -> primaryExpression makeByteArray
Rule 23    blockClosureHeader -> blockArguments blockResultType BAR
Rule 24    optionalBlockClosureHeader -> blockClosureHeader
Rule 25    optionalBlockClosureHeader -> <empty>
Rule 26    pragmaList -> <empty>
Rule 27    pragmaList -> pragmaList pragma
Rule 28    pragma -> LESS_THAN expandableIdentifier GREATER_THAN
Rule 29    pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN
Rule 30    pragmaKeywordArgument -> KEYWORD primaryExpression
Rule 31    pragmaKeywordArguments -> pragmaKeywordArgument
Rule 32    pragmaKeywordArguments -> pragmaKeywordArguments pragmaKeywordArgument
Rule 33    block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
Rule 34    blockArguments -> <empty>
Rule 35    blockArguments -> blockArguments blockArgument
Rule 36    blockArguments -> blockArguments blockGenericArgument
Rule 37    optionalBlockArgumentType -> <empty>
Rule 38    optionalBlockArgumentType -> LEFT_PARENT expression RIGHT_PARENT
Rule 39    blockGenericArgument -> COLON STAR optionalBlockArgumentType expandableIdentifier
Rule 40    blockArgument -> COLON optionalBlockArgumentType expandableIdentifier
Rule 41    blockResultType -> <empty>
Rule 42    blockResultType -> COLON_COLON primaryExpression
Rule 43    expandableIdentifier -> IDENTIFIER
Rule 44    expandableIdentifier -> QUASI_UNQUOTE primaryTerm
Rule 45    prefixUnaryExpression -> primaryExpression
Rule 46    prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression
Rule 47    binaryExpression -> prefixUnaryExpression
Rule 48    binaryExpression -> binaryExpression anyOperator prefixUnaryExpression
Rule 49    chainedMessageArgument -> KEYWORD binaryExpression
Rule 50    chainedMessageArguments -> chainedMessageArgument
Rule 51    chainedMessageArguments -> chainedMessageArguments chainedMessageArgument
Rule 52    chainedMessageKeyword -> chainedMessageArguments
Rule 53    chainedMessage -> chainedMessageKeyword
Rule 54    chainedMessage -> expandableIdentifier
Rule 55    chainedMessages -> SEMICOLON chainedMessage
Rule 56    chainedMessages -> chainedMessages SEMICOLON chainedMessage
Rule 57    optionalKeywordChain -> <empty>
Rule 58    optionalKeywordChain -> chainedMessages
Rule 59    chainExpression -> binaryExpression optionalKeywordChain
Rule 60    chainExpression -> binaryExpression chainedMessageKeyword optionalKeywordChain
Rule 61    chainExpression -> chainedMessageKeyword
Rule 62    chainExpression -> chainedMessageKeyword chainedMessages
Rule 63    lowPrecedenceExpression -> chainExpression
Rule 64    lowPrecedenceExpression -> lowPrecedenceExpression lowPrecedenceOperator chainExpression
Rule 65    lowPrecedenceOperator -> COLON_COLON anyOperator
Rule 66    assignmentExpression -> lowPrecedenceExpression
Rule 67    assignmentExpression -> lowPrecedenceExpression ASSIGNMENT assignmentExpression
Rule 68    commaExpressionContent -> assignmentExpression
Rule 69    commaExpressionContent -> commaExpressionContent COMMA assignmentExpression
Rule 70    commaExpression -> commaExpressionContent
Rule 71    commaExpression -> commaExpressionContent COMMA
Rule 72    expression -> commaExpression
Rule 73    literal -> FLOAT
Rule 74    literal -> INTEGER
Rule 75    literal -> CHARACTER
Rule 76    literal -> STRING
Rule 77    literal -> SYMBOL_IDENTIFIER
Rule 78    literal -> SYMBOL_KEYWORD
Rule 79    literal -> SYMBOL_OPERATOR
Rule 80    literal -> SYMBOL_STRING
Rule 81    literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
Rule 82    literalArrayElements -> <empty>
Rule 83    literalArrayElements -> literalArrayElements literalArrayElement
Rule 84    literalArrayElement -> literal
Rule 85    literalArrayElement -> IDENTIFIER
Rule 86    literalArrayElement -> anyKeyword
Rule 87    literalArrayElement -> anyOperator
Rule 88    literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT
Rule 89    dictionaryKey -> KEYWORD
Rule 90    dictionaryKey -> binaryExpression COLON
Rule 91    dictionaryElement -> dictionaryKey
Rule 92    dictionaryElement -> dictionaryKey expression
Rule 93    dictionaryElements -> <empty>
Rule 94    dictionaryElements -> dictionaryElement
Rule 95    dictionaryElements -> dictionaryElements DOT dictionaryElement
Rule 96    dictionaryElements -> dictionaryElements DOT
Rule 97    makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
Rule 98    makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET
Rule 99    anyOperator -> SINGLE_CHAR_OPERATOR
Rule 100   anyOperator -> MULTI_CHAR_OPERATOR
Rule 101   anyOperator -> BAR
Rule 102   anyOperator -> STAR
Rule 103   anyOperator -> LESS_THAN
Rule 104   anyOperator -> GREATER_THAN
Rule 105   anyPrefixOperator -> SINGLE_CHAR_OPERATOR
Rule 106   anyPrefixOperator -> MULTI_CHAR_OPERATOR
Rule 107   anyPrefixOperator -> STAR
Rule 108   anyKeyword -> KEYWORD
Rule 109   anyKeyword -> MULTI_KEYWORD

Terminals, with rules where they appear

ASSIGNMENT           : 67
BAR                  : 23 101
BYTE_ARRAY_LEFT_BRACKET : 98
CHARACTER            : 75
COLON                : 39 40 90
COLON_COLON          : 42 65
COMMA                : 69 71
DICTIONARY_ARRAY_LEFT_CURLY_BRACKET : 97
DOT                  : 2 95 96
FLOAT                : 73
GREATER_THAN         : 28 29 104
IDENTIFIER           : 5 43 85
INTEGER              : 74
KEYWORD              : 30 49 89 108
LEFT_BRACKET         : 19
LEFT_CURLY_BRACKET   : 33
LEFT_PARENT          : 10 11 18 38 88
LESS_THAN            : 28 29 103
LITERAL_ARRAY_LEFT_PARENT : 81
MULTI_CHAR_OPERATOR  : 100 106
MULTI_KEYWORD        : 109
QUASI_QUOTE          : 14
QUASI_UNQUOTE        : 15 44
QUOTE                : 13
RIGHT_BRACKET        : 19 98
RIGHT_CURLY_BRACKET  : 33 97
RIGHT_PARENT         : 10 11 18 38 81 88
SEMICOLON            : 55 56
SINGLE_CHAR_OPERATOR : 99 105
SPLICE               : 16
STAR                 : 39 102 107
STRING               : 76
SYMBOL_IDENTIFIER    : 77
SYMBOL_KEYWORD       : 78
SYMBOL_OPERATOR      : 79
SYMBOL_STRING        : 80
error                : 

Nonterminals, with rules where they appear

anyKeyword           : 86
anyOperator          : 48 65 87
anyPrefixOperator    : 46
assignmentExpression : 67 68 69
binaryExpression     : 48 49 59 60 90
block                : 7 20
blockArgument        : 35
blockArguments       : 23 35 36
blockClosureHeader   : 24
blockGenericArgument : 36
blockResultType      : 23
chainExpression      : 63 64
chainedMessage       : 55 56
chainedMessageArgument : 50 51
chainedMessageArguments : 51 52
chainedMessageKeyword : 53 60 61 62
chainedMessages      : 56 58 62
commaExpression      : 72
commaExpressionContent : 69 70 71
dictionaryElement    : 94 95
dictionaryElements   : 95 96 97
dictionaryKey        : 91 92
expandableIdentifier : 17 28 39 40 54
expression           : 4 11 38 92
expressionList       : 2 18 19 33 98 0
literal              : 6 84
literalArrayElement  : 83
literalArrayElements : 81 83 88
lowPrecedenceExpression : 64 66 67
lowPrecedenceOperator : 64
makeByteArray        : 9 22
makeDictionary       : 8 21
optionalBlockArgumentType : 39 40
optionalBlockClosureHeader : 33
optionalExpression   : 1 2
optionalKeywordChain : 59 60
pragma               : 27
pragmaKeywordArgument : 31 32
pragmaKeywordArguments : 29 32
pragmaList           : 27 33
prefixUnaryExpression : 46 47 48
primaryExpression    : 17 18 19 20 21 22 30 42 45
primaryTerm          : 12 13 14 15 16 44

Parsing method: LALR

state 0

    (0) S' -> . expressionList
    (1) expressionList -> . optionalExpression
    (2) expressionList -> . expressionList DOT optionalExpression
    (3) optionalExpression -> .
    (4) optionalExpression -> . expression
    (72) expression -> . commaExpression
    (70) commaExpression -> . commaExpressionContent
    (71) commaExpression -> . commaExpressionContent COMMA
    (68) commaExpressionContent -> . assignmentExpression
    (69) commaExpressionContent -> . commaExpressionContent COMMA assignmentExpression
    (66) assignmentExpression -> . lowPrecedenceExpression
    (67) assignmentExpression -> . lowPrecedenceExpression ASSIGNMENT assignmentExpression
    (63) lowPrecedenceExpression -> . chainExpression
    (64) lowPrecedenceExpression -> . lowPrecedenceExpression lowPrecedenceOperator chainExpression
    (59) chainExpression -> . binaryExpression optionalKeywordChain
    (60) chainExpression -> . binaryExpression chainedMessageKeyword optionalKeywordChain
    (61) chainExpression -> . chainedMessageKeyword
    (62) chainExpression -> . chainedMessageKeyword chainedMessages
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (49) chainedMessageArgument -> . KEYWORD binaryExpression
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    DOT             reduce using rule 3 (optionalExpression -> .)
    $end            reduce using rule 3 (optionalExpression -> .)
    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    KEYWORD         shift and go to state 28
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    expressionList                 shift and go to state 1
    optionalExpression             shift and go to state 2
    expression                     shift and go to state 3
    commaExpression                shift and go to state 4
    commaExpressionContent         shift and go to state 5
    assignmentExpression           shift and go to state 6
    lowPrecedenceExpression        shift and go to state 7
    chainExpression                shift and go to state 8
    binaryExpression               shift and go to state 9
    chainedMessageKeyword          shift and go to state 10
    prefixUnaryExpression          shift and go to state 11
    chainedMessageArguments        shift and go to state 12
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    chainedMessageArgument         shift and go to state 15
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 1

    (0) S' -> expressionList .
    (2) expressionList -> expressionList . DOT optionalExpression

    DOT             shift and go to state 43


state 2

    (1) expressionList -> optionalExpression .

    DOT             reduce using rule 1 (expressionList -> optionalExpression .)
    $end            reduce using rule 1 (expressionList -> optionalExpression .)
    RIGHT_BRACKET   reduce using rule 1 (expressionList -> optionalExpression .)
    RIGHT_PARENT    reduce using rule 1 (expressionList -> optionalExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 1 (expressionList -> optionalExpression .)


state 3

    (4) optionalExpression -> expression .

    DOT             reduce using rule 4 (optionalExpression -> expression .)
    $end            reduce using rule 4 (optionalExpression -> expression .)
    RIGHT_BRACKET   reduce using rule 4 (optionalExpression -> expression .)
    RIGHT_PARENT    reduce using rule 4 (optionalExpression -> expression .)
    RIGHT_CURLY_BRACKET reduce using rule 4 (optionalExpression -> expression .)


state 4

    (72) expression -> commaExpression .

    DOT             reduce using rule 72 (expression -> commaExpression .)
    $end            reduce using rule 72 (expression -> commaExpression .)
    RIGHT_PARENT    reduce using rule 72 (expression -> commaExpression .)
    RIGHT_BRACKET   reduce using rule 72 (expression -> commaExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 72 (expression -> commaExpression .)


state 5

    (70) commaExpression -> commaExpressionContent .
    (71) commaExpression -> commaExpressionContent . COMMA
    (69) commaExpressionContent -> commaExpressionContent . COMMA assignmentExpression

    DOT             reduce using rule 70 (commaExpression -> commaExpressionContent .)
    $end            reduce using rule 70 (commaExpression -> commaExpressionContent .)
    RIGHT_PARENT    reduce using rule 70 (commaExpression -> commaExpressionContent .)
    RIGHT_BRACKET   reduce using rule 70 (commaExpression -> commaExpressionContent .)
    RIGHT_CURLY_BRACKET reduce using rule 70 (commaExpression -> commaExpressionContent .)
    COMMA           shift and go to state 44


state 6

    (68) commaExpressionContent -> assignmentExpression .

    COMMA           reduce using rule 68 (commaExpressionContent -> assignmentExpression .)
    DOT             reduce using rule 68 (commaExpressionContent -> assignmentExpression .)
    $end            reduce using rule 68 (commaExpressionContent -> assignmentExpression .)
    RIGHT_PARENT    reduce using rule 68 (commaExpressionContent -> assignmentExpression .)
    RIGHT_BRACKET   reduce using rule 68 (commaExpressionContent -> assignmentExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 68 (commaExpressionContent -> assignmentExpression .)


state 7

    (66) assignmentExpression -> lowPrecedenceExpression .
    (67) assignmentExpression -> lowPrecedenceExpression . ASSIGNMENT assignmentExpression
    (64) lowPrecedenceExpression -> lowPrecedenceExpression . lowPrecedenceOperator chainExpression
    (65) lowPrecedenceOperator -> . COLON_COLON anyOperator

    COMMA           reduce using rule 66 (assignmentExpression -> lowPrecedenceExpression .)
    DOT             reduce using rule 66 (assignmentExpression -> lowPrecedenceExpression .)
    $end            reduce using rule 66 (assignmentExpression -> lowPrecedenceExpression .)
    RIGHT_PARENT    reduce using rule 66 (assignmentExpression -> lowPrecedenceExpression .)
    RIGHT_BRACKET   reduce using rule 66 (assignmentExpression -> lowPrecedenceExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 66 (assignmentExpression -> lowPrecedenceExpression .)
    ASSIGNMENT      shift and go to state 45
    COLON_COLON     shift and go to state 47

    lowPrecedenceOperator          shift and go to state 46

state 8

    (63) lowPrecedenceExpression -> chainExpression .

    ASSIGNMENT      reduce using rule 63 (lowPrecedenceExpression -> chainExpression .)
    COLON_COLON     reduce using rule 63 (lowPrecedenceExpression -> chainExpression .)
    COMMA           reduce using rule 63 (lowPrecedenceExpression -> chainExpression .)
    DOT             reduce using rule 63 (lowPrecedenceExpression -> chainExpression .)
    $end            reduce using rule 63 (lowPrecedenceExpression -> chainExpression .)
    RIGHT_PARENT    reduce using rule 63 (lowPrecedenceExpression -> chainExpression .)
    RIGHT_BRACKET   reduce using rule 63 (lowPrecedenceExpression -> chainExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 63 (lowPrecedenceExpression -> chainExpression .)


state 9

    (59) chainExpression -> binaryExpression . optionalKeywordChain
    (60) chainExpression -> binaryExpression . chainedMessageKeyword optionalKeywordChain
    (48) binaryExpression -> binaryExpression . anyOperator prefixUnaryExpression
    (57) optionalKeywordChain -> .
    (58) optionalKeywordChain -> . chainedMessages
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (99) anyOperator -> . SINGLE_CHAR_OPERATOR
    (100) anyOperator -> . MULTI_CHAR_OPERATOR
    (101) anyOperator -> . BAR
    (102) anyOperator -> . STAR
    (103) anyOperator -> . LESS_THAN
    (104) anyOperator -> . GREATER_THAN
    (55) chainedMessages -> . SEMICOLON chainedMessage
    (56) chainedMessages -> . chainedMessages SEMICOLON chainedMessage
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (49) chainedMessageArgument -> . KEYWORD binaryExpression

    ASSIGNMENT      reduce using rule 57 (optionalKeywordChain -> .)
    COLON_COLON     reduce using rule 57 (optionalKeywordChain -> .)
    COMMA           reduce using rule 57 (optionalKeywordChain -> .)
    DOT             reduce using rule 57 (optionalKeywordChain -> .)
    $end            reduce using rule 57 (optionalKeywordChain -> .)
    RIGHT_PARENT    reduce using rule 57 (optionalKeywordChain -> .)
    RIGHT_BRACKET   reduce using rule 57 (optionalKeywordChain -> .)
    RIGHT_CURLY_BRACKET reduce using rule 57 (optionalKeywordChain -> .)
    SINGLE_CHAR_OPERATOR shift and go to state 52
    MULTI_CHAR_OPERATOR shift and go to state 53
    BAR             shift and go to state 54
    STAR            shift and go to state 55
    LESS_THAN       shift and go to state 56
    GREATER_THAN    shift and go to state 57
    SEMICOLON       shift and go to state 58
    KEYWORD         shift and go to state 28

    optionalKeywordChain           shift and go to state 48
    chainedMessageKeyword          shift and go to state 49
    anyOperator                    shift and go to state 50
    chainedMessages                shift and go to state 51
    chainedMessageArguments        shift and go to state 12
    chainedMessageArgument         shift and go to state 15

state 10

    (61) chainExpression -> chainedMessageKeyword .
    (62) chainExpression -> chainedMessageKeyword . chainedMessages
    (55) chainedMessages -> . SEMICOLON chainedMessage
    (56) chainedMessages -> . chainedMessages SEMICOLON chainedMessage

    ASSIGNMENT      reduce using rule 61 (chainExpression -> chainedMessageKeyword .)
    COLON_COLON     reduce using rule 61 (chainExpression -> chainedMessageKeyword .)
    COMMA           reduce using rule 61 (chainExpression -> chainedMessageKeyword .)
    DOT             reduce using rule 61 (chainExpression -> chainedMessageKeyword .)
    $end            reduce using rule 61 (chainExpression -> chainedMessageKeyword .)
    RIGHT_PARENT    reduce using rule 61 (chainExpression -> chainedMessageKeyword .)
    RIGHT_BRACKET   reduce using rule 61 (chainExpression -> chainedMessageKeyword .)
    RIGHT_CURLY_BRACKET reduce using rule 61 (chainExpression -> chainedMessageKeyword .)
    SEMICOLON       shift and go to state 58

    chainedMessages                shift and go to state 59

state 11

    (47) binaryExpression -> prefixUnaryExpression .

    SINGLE_CHAR_OPERATOR reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    MULTI_CHAR_OPERATOR reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    BAR             reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    STAR            reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    LESS_THAN       reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    GREATER_THAN    reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    SEMICOLON       reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    KEYWORD         reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    ASSIGNMENT      reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    COLON_COLON     reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    COMMA           reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    DOT             reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    $end            reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    RIGHT_PARENT    reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    RIGHT_BRACKET   reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)
    COLON           reduce using rule 47 (binaryExpression -> prefixUnaryExpression .)


state 12

    (52) chainedMessageKeyword -> chainedMessageArguments .
    (51) chainedMessageArguments -> chainedMessageArguments . chainedMessageArgument
    (49) chainedMessageArgument -> . KEYWORD binaryExpression

    SEMICOLON       reduce using rule 52 (chainedMessageKeyword -> chainedMessageArguments .)
    ASSIGNMENT      reduce using rule 52 (chainedMessageKeyword -> chainedMessageArguments .)
    COLON_COLON     reduce using rule 52 (chainedMessageKeyword -> chainedMessageArguments .)
    COMMA           reduce using rule 52 (chainedMessageKeyword -> chainedMessageArguments .)
    DOT             reduce using rule 52 (chainedMessageKeyword -> chainedMessageArguments .)
    $end            reduce using rule 52 (chainedMessageKeyword -> chainedMessageArguments .)
    RIGHT_PARENT    reduce using rule 52 (chainedMessageKeyword -> chainedMessageArguments .)
    RIGHT_BRACKET   reduce using rule 52 (chainedMessageKeyword -> chainedMessageArguments .)
    RIGHT_CURLY_BRACKET reduce using rule 52 (chainedMessageKeyword -> chainedMessageArguments .)
    KEYWORD         shift and go to state 28

    chainedMessageArgument         shift and go to state 60

state 13

    (45) prefixUnaryExpression -> primaryExpression .
    (17) primaryExpression -> primaryExpression . expandableIdentifier
    (18) primaryExpression -> primaryExpression . LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> primaryExpression . LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> primaryExpression . block
    (21) primaryExpression -> primaryExpression . makeDictionary
    (22) primaryExpression -> primaryExpression . makeByteArray
    (43) expandableIdentifier -> . IDENTIFIER
    (44) expandableIdentifier -> . QUASI_UNQUOTE primaryTerm
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    SINGLE_CHAR_OPERATOR reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    MULTI_CHAR_OPERATOR reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    BAR             reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    STAR            reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    LESS_THAN       reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    GREATER_THAN    reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    SEMICOLON       reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    KEYWORD         reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    ASSIGNMENT      reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    COLON_COLON     reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    COMMA           reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    DOT             reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    $end            reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    RIGHT_PARENT    reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    RIGHT_BRACKET   reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    COLON           reduce using rule 45 (prefixUnaryExpression -> primaryExpression .)
    LEFT_PARENT     shift and go to state 62
    LEFT_BRACKET    shift and go to state 63
    IDENTIFIER      shift and go to state 67
    QUASI_UNQUOTE   shift and go to state 68
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    expandableIdentifier           shift and go to state 61
    block                          shift and go to state 64
    makeDictionary                 shift and go to state 65
    makeByteArray                  shift and go to state 66

state 14

    (46) prefixUnaryExpression -> anyPrefixOperator . prefixUnaryExpression
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    anyPrefixOperator              shift and go to state 14
    prefixUnaryExpression          shift and go to state 69
    primaryExpression              shift and go to state 13
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 15

    (50) chainedMessageArguments -> chainedMessageArgument .

    KEYWORD         reduce using rule 50 (chainedMessageArguments -> chainedMessageArgument .)
    SEMICOLON       reduce using rule 50 (chainedMessageArguments -> chainedMessageArgument .)
    ASSIGNMENT      reduce using rule 50 (chainedMessageArguments -> chainedMessageArgument .)
    COLON_COLON     reduce using rule 50 (chainedMessageArguments -> chainedMessageArgument .)
    COMMA           reduce using rule 50 (chainedMessageArguments -> chainedMessageArgument .)
    DOT             reduce using rule 50 (chainedMessageArguments -> chainedMessageArgument .)
    $end            reduce using rule 50 (chainedMessageArguments -> chainedMessageArgument .)
    RIGHT_PARENT    reduce using rule 50 (chainedMessageArguments -> chainedMessageArgument .)
    RIGHT_BRACKET   reduce using rule 50 (chainedMessageArguments -> chainedMessageArgument .)
    RIGHT_CURLY_BRACKET reduce using rule 50 (chainedMessageArguments -> chainedMessageArgument .)


state 16

    (12) primaryExpression -> primaryTerm .

    LEFT_PARENT     reduce using rule 12 (primaryExpression -> primaryTerm .)
    LEFT_BRACKET    reduce using rule 12 (primaryExpression -> primaryTerm .)
    IDENTIFIER      reduce using rule 12 (primaryExpression -> primaryTerm .)
    QUASI_UNQUOTE   reduce using rule 12 (primaryExpression -> primaryTerm .)
    LEFT_CURLY_BRACKET reduce using rule 12 (primaryExpression -> primaryTerm .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 12 (primaryExpression -> primaryTerm .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 12 (primaryExpression -> primaryTerm .)
    SINGLE_CHAR_OPERATOR reduce using rule 12 (primaryExpression -> primaryTerm .)
    MULTI_CHAR_OPERATOR reduce using rule 12 (primaryExpression -> primaryTerm .)
    BAR             reduce using rule 12 (primaryExpression -> primaryTerm .)
    STAR            reduce using rule 12 (primaryExpression -> primaryTerm .)
    LESS_THAN       reduce using rule 12 (primaryExpression -> primaryTerm .)
    GREATER_THAN    reduce using rule 12 (primaryExpression -> primaryTerm .)
    SEMICOLON       reduce using rule 12 (primaryExpression -> primaryTerm .)
    KEYWORD         reduce using rule 12 (primaryExpression -> primaryTerm .)
    ASSIGNMENT      reduce using rule 12 (primaryExpression -> primaryTerm .)
    COLON_COLON     reduce using rule 12 (primaryExpression -> primaryTerm .)
    COMMA           reduce using rule 12 (primaryExpression -> primaryTerm .)
    DOT             reduce using rule 12 (primaryExpression -> primaryTerm .)
    $end            reduce using rule 12 (primaryExpression -> primaryTerm .)
    RIGHT_PARENT    reduce using rule 12 (primaryExpression -> primaryTerm .)
    RIGHT_BRACKET   reduce using rule 12 (primaryExpression -> primaryTerm .)
    RIGHT_CURLY_BRACKET reduce using rule 12 (primaryExpression -> primaryTerm .)
    COLON           reduce using rule 12 (primaryExpression -> primaryTerm .)


state 17

    (13) primaryExpression -> QUOTE . primaryTerm
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    primaryTerm                    shift and go to state 70
    literal                        shift and go to state 30
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24

state 18

    (14) primaryExpression -> QUASI_QUOTE . primaryTerm
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    primaryTerm                    shift and go to state 71
    literal                        shift and go to state 30
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24

state 19

    (15) primaryExpression -> QUASI_UNQUOTE . primaryTerm
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    primaryTerm                    shift and go to state 72
    literal                        shift and go to state 30
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24

state 20

    (16) primaryExpression -> SPLICE . primaryTerm
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    primaryTerm                    shift and go to state 73
    literal                        shift and go to state 30
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24

state 21

    (10) primaryTerm -> LEFT_PARENT . RIGHT_PARENT
    (11) primaryTerm -> LEFT_PARENT . expression RIGHT_PARENT
    (72) expression -> . commaExpression
    (70) commaExpression -> . commaExpressionContent
    (71) commaExpression -> . commaExpressionContent COMMA
    (68) commaExpressionContent -> . assignmentExpression
    (69) commaExpressionContent -> . commaExpressionContent COMMA assignmentExpression
    (66) assignmentExpression -> . lowPrecedenceExpression
    (67) assignmentExpression -> . lowPrecedenceExpression ASSIGNMENT assignmentExpression
    (63) lowPrecedenceExpression -> . chainExpression
    (64) lowPrecedenceExpression -> . lowPrecedenceExpression lowPrecedenceOperator chainExpression
    (59) chainExpression -> . binaryExpression optionalKeywordChain
    (60) chainExpression -> . binaryExpression chainedMessageKeyword optionalKeywordChain
    (61) chainExpression -> . chainedMessageKeyword
    (62) chainExpression -> . chainedMessageKeyword chainedMessages
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (49) chainedMessageArgument -> . KEYWORD binaryExpression
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    RIGHT_PARENT    shift and go to state 74
    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    KEYWORD         shift and go to state 28
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    expression                     shift and go to state 75
    commaExpression                shift and go to state 4
    commaExpressionContent         shift and go to state 5
    assignmentExpression           shift and go to state 6
    lowPrecedenceExpression        shift and go to state 7
    chainExpression                shift and go to state 8
    binaryExpression               shift and go to state 9
    chainedMessageKeyword          shift and go to state 10
    prefixUnaryExpression          shift and go to state 11
    chainedMessageArguments        shift and go to state 12
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    chainedMessageArgument         shift and go to state 15
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 22

    (7) primaryTerm -> block .

    LEFT_PARENT     reduce using rule 7 (primaryTerm -> block .)
    LEFT_BRACKET    reduce using rule 7 (primaryTerm -> block .)
    IDENTIFIER      reduce using rule 7 (primaryTerm -> block .)
    QUASI_UNQUOTE   reduce using rule 7 (primaryTerm -> block .)
    LEFT_CURLY_BRACKET reduce using rule 7 (primaryTerm -> block .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 7 (primaryTerm -> block .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 7 (primaryTerm -> block .)
    SINGLE_CHAR_OPERATOR reduce using rule 7 (primaryTerm -> block .)
    MULTI_CHAR_OPERATOR reduce using rule 7 (primaryTerm -> block .)
    BAR             reduce using rule 7 (primaryTerm -> block .)
    STAR            reduce using rule 7 (primaryTerm -> block .)
    LESS_THAN       reduce using rule 7 (primaryTerm -> block .)
    GREATER_THAN    reduce using rule 7 (primaryTerm -> block .)
    SEMICOLON       reduce using rule 7 (primaryTerm -> block .)
    KEYWORD         reduce using rule 7 (primaryTerm -> block .)
    ASSIGNMENT      reduce using rule 7 (primaryTerm -> block .)
    COLON_COLON     reduce using rule 7 (primaryTerm -> block .)
    COMMA           reduce using rule 7 (primaryTerm -> block .)
    DOT             reduce using rule 7 (primaryTerm -> block .)
    $end            reduce using rule 7 (primaryTerm -> block .)
    RIGHT_PARENT    reduce using rule 7 (primaryTerm -> block .)
    RIGHT_BRACKET   reduce using rule 7 (primaryTerm -> block .)
    RIGHT_CURLY_BRACKET reduce using rule 7 (primaryTerm -> block .)
    COLON           reduce using rule 7 (primaryTerm -> block .)


state 23

    (8) primaryTerm -> makeDictionary .

    LEFT_PARENT     reduce using rule 8 (primaryTerm -> makeDictionary .)
    LEFT_BRACKET    reduce using rule 8 (primaryTerm -> makeDictionary .)
    IDENTIFIER      reduce using rule 8 (primaryTerm -> makeDictionary .)
    QUASI_UNQUOTE   reduce using rule 8 (primaryTerm -> makeDictionary .)
    LEFT_CURLY_BRACKET reduce using rule 8 (primaryTerm -> makeDictionary .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 8 (primaryTerm -> makeDictionary .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 8 (primaryTerm -> makeDictionary .)
    SINGLE_CHAR_OPERATOR reduce using rule 8 (primaryTerm -> makeDictionary .)
    MULTI_CHAR_OPERATOR reduce using rule 8 (primaryTerm -> makeDictionary .)
    BAR             reduce using rule 8 (primaryTerm -> makeDictionary .)
    STAR            reduce using rule 8 (primaryTerm -> makeDictionary .)
    LESS_THAN       reduce using rule 8 (primaryTerm -> makeDictionary .)
    GREATER_THAN    reduce using rule 8 (primaryTerm -> makeDictionary .)
    SEMICOLON       reduce using rule 8 (primaryTerm -> makeDictionary .)
    KEYWORD         reduce using rule 8 (primaryTerm -> makeDictionary .)
    ASSIGNMENT      reduce using rule 8 (primaryTerm -> makeDictionary .)
    COLON_COLON     reduce using rule 8 (primaryTerm -> makeDictionary .)
    COMMA           reduce using rule 8 (primaryTerm -> makeDictionary .)
    DOT             reduce using rule 8 (primaryTerm -> makeDictionary .)
    $end            reduce using rule 8 (primaryTerm -> makeDictionary .)
    RIGHT_PARENT    reduce using rule 8 (primaryTerm -> makeDictionary .)
    RIGHT_BRACKET   reduce using rule 8 (primaryTerm -> makeDictionary .)
    RIGHT_CURLY_BRACKET reduce using rule 8 (primaryTerm -> makeDictionary .)
    COLON           reduce using rule 8 (primaryTerm -> makeDictionary .)


state 24

    (9) primaryTerm -> makeByteArray .

    LEFT_PARENT     reduce using rule 9 (primaryTerm -> makeByteArray .)
    LEFT_BRACKET    reduce using rule 9 (primaryTerm -> makeByteArray .)
    IDENTIFIER      reduce using rule 9 (primaryTerm -> makeByteArray .)
    QUASI_UNQUOTE   reduce using rule 9 (primaryTerm -> makeByteArray .)
    LEFT_CURLY_BRACKET reduce using rule 9 (primaryTerm -> makeByteArray .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 9 (primaryTerm -> makeByteArray .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 9 (primaryTerm -> makeByteArray .)
    SINGLE_CHAR_OPERATOR reduce using rule 9 (primaryTerm -> makeByteArray .)
    MULTI_CHAR_OPERATOR reduce using rule 9 (primaryTerm -> makeByteArray .)
    BAR             reduce using rule 9 (primaryTerm -> makeByteArray .)
    STAR            reduce using rule 9 (primaryTerm -> makeByteArray .)
    LESS_THAN       reduce using rule 9 (primaryTerm -> makeByteArray .)
    GREATER_THAN    reduce using rule 9 (primaryTerm -> makeByteArray .)
    SEMICOLON       reduce using rule 9 (primaryTerm -> makeByteArray .)
    KEYWORD         reduce using rule 9 (primaryTerm -> makeByteArray .)
    ASSIGNMENT      reduce using rule 9 (primaryTerm -> makeByteArray .)
    COLON_COLON     reduce using rule 9 (primaryTerm -> makeByteArray .)
    COMMA           reduce using rule 9 (primaryTerm -> makeByteArray .)
    DOT             reduce using rule 9 (primaryTerm -> makeByteArray .)
    $end            reduce using rule 9 (primaryTerm -> makeByteArray .)
    RIGHT_PARENT    reduce using rule 9 (primaryTerm -> makeByteArray .)
    RIGHT_BRACKET   reduce using rule 9 (primaryTerm -> makeByteArray .)
    RIGHT_CURLY_BRACKET reduce using rule 9 (primaryTerm -> makeByteArray .)
    COLON           reduce using rule 9 (primaryTerm -> makeByteArray .)


state 25

    (105) anyPrefixOperator -> SINGLE_CHAR_OPERATOR .

    QUOTE           reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    QUASI_QUOTE     reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    QUASI_UNQUOTE   reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    SPLICE          reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    SINGLE_CHAR_OPERATOR reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    MULTI_CHAR_OPERATOR reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    STAR            reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    IDENTIFIER      reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    LEFT_PARENT     reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    FLOAT           reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    INTEGER         reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    CHARACTER       reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    STRING          reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    SYMBOL_IDENTIFIER reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    SYMBOL_KEYWORD  reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    SYMBOL_OPERATOR reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    SYMBOL_STRING   reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    LEFT_CURLY_BRACKET reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 105 (anyPrefixOperator -> SINGLE_CHAR_OPERATOR .)


state 26

    (106) anyPrefixOperator -> MULTI_CHAR_OPERATOR .

    QUOTE           reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    QUASI_QUOTE     reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    QUASI_UNQUOTE   reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    SPLICE          reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    SINGLE_CHAR_OPERATOR reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    MULTI_CHAR_OPERATOR reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    STAR            reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    IDENTIFIER      reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    LEFT_PARENT     reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    FLOAT           reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    INTEGER         reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    CHARACTER       reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    STRING          reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    SYMBOL_IDENTIFIER reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    SYMBOL_KEYWORD  reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    SYMBOL_OPERATOR reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    SYMBOL_STRING   reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    LEFT_CURLY_BRACKET reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 106 (anyPrefixOperator -> MULTI_CHAR_OPERATOR .)


state 27

    (107) anyPrefixOperator -> STAR .

    QUOTE           reduce using rule 107 (anyPrefixOperator -> STAR .)
    QUASI_QUOTE     reduce using rule 107 (anyPrefixOperator -> STAR .)
    QUASI_UNQUOTE   reduce using rule 107 (anyPrefixOperator -> STAR .)
    SPLICE          reduce using rule 107 (anyPrefixOperator -> STAR .)
    SINGLE_CHAR_OPERATOR reduce using rule 107 (anyPrefixOperator -> STAR .)
    MULTI_CHAR_OPERATOR reduce using rule 107 (anyPrefixOperator -> STAR .)
    STAR            reduce using rule 107 (anyPrefixOperator -> STAR .)
    IDENTIFIER      reduce using rule 107 (anyPrefixOperator -> STAR .)
    LEFT_PARENT     reduce using rule 107 (anyPrefixOperator -> STAR .)
    FLOAT           reduce using rule 107 (anyPrefixOperator -> STAR .)
    INTEGER         reduce using rule 107 (anyPrefixOperator -> STAR .)
    CHARACTER       reduce using rule 107 (anyPrefixOperator -> STAR .)
    STRING          reduce using rule 107 (anyPrefixOperator -> STAR .)
    SYMBOL_IDENTIFIER reduce using rule 107 (anyPrefixOperator -> STAR .)
    SYMBOL_KEYWORD  reduce using rule 107 (anyPrefixOperator -> STAR .)
    SYMBOL_OPERATOR reduce using rule 107 (anyPrefixOperator -> STAR .)
    SYMBOL_STRING   reduce using rule 107 (anyPrefixOperator -> STAR .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 107 (anyPrefixOperator -> STAR .)
    LEFT_CURLY_BRACKET reduce using rule 107 (anyPrefixOperator -> STAR .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 107 (anyPrefixOperator -> STAR .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 107 (anyPrefixOperator -> STAR .)


state 28

    (49) chainedMessageArgument -> KEYWORD . binaryExpression
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    binaryExpression               shift and go to state 76
    prefixUnaryExpression          shift and go to state 11
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 29

    (5) primaryTerm -> IDENTIFIER .

    LEFT_PARENT     reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    LEFT_BRACKET    reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    QUASI_UNQUOTE   reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    LEFT_CURLY_BRACKET reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    SINGLE_CHAR_OPERATOR reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    MULTI_CHAR_OPERATOR reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    BAR             reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    STAR            reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    LESS_THAN       reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    SEMICOLON       reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    KEYWORD         reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    ASSIGNMENT      reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    COLON_COLON     reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    COMMA           reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    DOT             reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    $end            reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    RIGHT_PARENT    reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    RIGHT_BRACKET   reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    RIGHT_CURLY_BRACKET reduce using rule 5 (primaryTerm -> IDENTIFIER .)
    COLON           reduce using rule 5 (primaryTerm -> IDENTIFIER .)


state 30

    (6) primaryTerm -> literal .

    LEFT_PARENT     reduce using rule 6 (primaryTerm -> literal .)
    LEFT_BRACKET    reduce using rule 6 (primaryTerm -> literal .)
    IDENTIFIER      reduce using rule 6 (primaryTerm -> literal .)
    QUASI_UNQUOTE   reduce using rule 6 (primaryTerm -> literal .)
    LEFT_CURLY_BRACKET reduce using rule 6 (primaryTerm -> literal .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 6 (primaryTerm -> literal .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 6 (primaryTerm -> literal .)
    SINGLE_CHAR_OPERATOR reduce using rule 6 (primaryTerm -> literal .)
    MULTI_CHAR_OPERATOR reduce using rule 6 (primaryTerm -> literal .)
    BAR             reduce using rule 6 (primaryTerm -> literal .)
    STAR            reduce using rule 6 (primaryTerm -> literal .)
    LESS_THAN       reduce using rule 6 (primaryTerm -> literal .)
    GREATER_THAN    reduce using rule 6 (primaryTerm -> literal .)
    SEMICOLON       reduce using rule 6 (primaryTerm -> literal .)
    KEYWORD         reduce using rule 6 (primaryTerm -> literal .)
    ASSIGNMENT      reduce using rule 6 (primaryTerm -> literal .)
    COLON_COLON     reduce using rule 6 (primaryTerm -> literal .)
    COMMA           reduce using rule 6 (primaryTerm -> literal .)
    DOT             reduce using rule 6 (primaryTerm -> literal .)
    $end            reduce using rule 6 (primaryTerm -> literal .)
    RIGHT_PARENT    reduce using rule 6 (primaryTerm -> literal .)
    RIGHT_BRACKET   reduce using rule 6 (primaryTerm -> literal .)
    RIGHT_CURLY_BRACKET reduce using rule 6 (primaryTerm -> literal .)
    COLON           reduce using rule 6 (primaryTerm -> literal .)


state 31

    (73) literal -> FLOAT .

    LEFT_PARENT     reduce using rule 73 (literal -> FLOAT .)
    LEFT_BRACKET    reduce using rule 73 (literal -> FLOAT .)
    IDENTIFIER      reduce using rule 73 (literal -> FLOAT .)
    QUASI_UNQUOTE   reduce using rule 73 (literal -> FLOAT .)
    LEFT_CURLY_BRACKET reduce using rule 73 (literal -> FLOAT .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 73 (literal -> FLOAT .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 73 (literal -> FLOAT .)
    SINGLE_CHAR_OPERATOR reduce using rule 73 (literal -> FLOAT .)
    MULTI_CHAR_OPERATOR reduce using rule 73 (literal -> FLOAT .)
    BAR             reduce using rule 73 (literal -> FLOAT .)
    STAR            reduce using rule 73 (literal -> FLOAT .)
    LESS_THAN       reduce using rule 73 (literal -> FLOAT .)
    GREATER_THAN    reduce using rule 73 (literal -> FLOAT .)
    SEMICOLON       reduce using rule 73 (literal -> FLOAT .)
    KEYWORD         reduce using rule 73 (literal -> FLOAT .)
    ASSIGNMENT      reduce using rule 73 (literal -> FLOAT .)
    COLON_COLON     reduce using rule 73 (literal -> FLOAT .)
    COMMA           reduce using rule 73 (literal -> FLOAT .)
    DOT             reduce using rule 73 (literal -> FLOAT .)
    $end            reduce using rule 73 (literal -> FLOAT .)
    RIGHT_PARENT    reduce using rule 73 (literal -> FLOAT .)
    RIGHT_BRACKET   reduce using rule 73 (literal -> FLOAT .)
    RIGHT_CURLY_BRACKET reduce using rule 73 (literal -> FLOAT .)
    COLON           reduce using rule 73 (literal -> FLOAT .)
    FLOAT           reduce using rule 73 (literal -> FLOAT .)
    INTEGER         reduce using rule 73 (literal -> FLOAT .)
    CHARACTER       reduce using rule 73 (literal -> FLOAT .)
    STRING          reduce using rule 73 (literal -> FLOAT .)
    SYMBOL_IDENTIFIER reduce using rule 73 (literal -> FLOAT .)
    SYMBOL_KEYWORD  reduce using rule 73 (literal -> FLOAT .)
    SYMBOL_OPERATOR reduce using rule 73 (literal -> FLOAT .)
    SYMBOL_STRING   reduce using rule 73 (literal -> FLOAT .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 73 (literal -> FLOAT .)
    MULTI_KEYWORD   reduce using rule 73 (literal -> FLOAT .)


state 32

    (74) literal -> INTEGER .

    LEFT_PARENT     reduce using rule 74 (literal -> INTEGER .)
    LEFT_BRACKET    reduce using rule 74 (literal -> INTEGER .)
    IDENTIFIER      reduce using rule 74 (literal -> INTEGER .)
    QUASI_UNQUOTE   reduce using rule 74 (literal -> INTEGER .)
    LEFT_CURLY_BRACKET reduce using rule 74 (literal -> INTEGER .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 74 (literal -> INTEGER .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 74 (literal -> INTEGER .)
    SINGLE_CHAR_OPERATOR reduce using rule 74 (literal -> INTEGER .)
    MULTI_CHAR_OPERATOR reduce using rule 74 (literal -> INTEGER .)
    BAR             reduce using rule 74 (literal -> INTEGER .)
    STAR            reduce using rule 74 (literal -> INTEGER .)
    LESS_THAN       reduce using rule 74 (literal -> INTEGER .)
    GREATER_THAN    reduce using rule 74 (literal -> INTEGER .)
    SEMICOLON       reduce using rule 74 (literal -> INTEGER .)
    KEYWORD         reduce using rule 74 (literal -> INTEGER .)
    ASSIGNMENT      reduce using rule 74 (literal -> INTEGER .)
    COLON_COLON     reduce using rule 74 (literal -> INTEGER .)
    COMMA           reduce using rule 74 (literal -> INTEGER .)
    DOT             reduce using rule 74 (literal -> INTEGER .)
    $end            reduce using rule 74 (literal -> INTEGER .)
    RIGHT_PARENT    reduce using rule 74 (literal -> INTEGER .)
    RIGHT_BRACKET   reduce using rule 74 (literal -> INTEGER .)
    RIGHT_CURLY_BRACKET reduce using rule 74 (literal -> INTEGER .)
    COLON           reduce using rule 74 (literal -> INTEGER .)
    FLOAT           reduce using rule 74 (literal -> INTEGER .)
    INTEGER         reduce using rule 74 (literal -> INTEGER .)
    CHARACTER       reduce using rule 74 (literal -> INTEGER .)
    STRING          reduce using rule 74 (literal -> INTEGER .)
    SYMBOL_IDENTIFIER reduce using rule 74 (literal -> INTEGER .)
    SYMBOL_KEYWORD  reduce using rule 74 (literal -> INTEGER .)
    SYMBOL_OPERATOR reduce using rule 74 (literal -> INTEGER .)
    SYMBOL_STRING   reduce using rule 74 (literal -> INTEGER .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 74 (literal -> INTEGER .)
    MULTI_KEYWORD   reduce using rule 74 (literal -> INTEGER .)


state 33

    (75) literal -> CHARACTER .

    LEFT_PARENT     reduce using rule 75 (literal -> CHARACTER .)
    LEFT_BRACKET    reduce using rule 75 (literal -> CHARACTER .)
    IDENTIFIER      reduce using rule 75 (literal -> CHARACTER .)
    QUASI_UNQUOTE   reduce using rule 75 (literal -> CHARACTER .)
    LEFT_CURLY_BRACKET reduce using rule 75 (literal -> CHARACTER .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 75 (literal -> CHARACTER .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 75 (literal -> CHARACTER .)
    SINGLE_CHAR_OPERATOR reduce using rule 75 (literal -> CHARACTER .)
    MULTI_CHAR_OPERATOR reduce using rule 75 (literal -> CHARACTER .)
    BAR             reduce using rule 75 (literal -> CHARACTER .)
    STAR            reduce using rule 75 (literal -> CHARACTER .)
    LESS_THAN       reduce using rule 75 (literal -> CHARACTER .)
    GREATER_THAN    reduce using rule 75 (literal -> CHARACTER .)
    SEMICOLON       reduce using rule 75 (literal -> CHARACTER .)
    KEYWORD         reduce using rule 75 (literal -> CHARACTER .)
    ASSIGNMENT      reduce using rule 75 (literal -> CHARACTER .)
    COLON_COLON     reduce using rule 75 (literal -> CHARACTER .)
    COMMA           reduce using rule 75 (literal -> CHARACTER .)
    DOT             reduce using rule 75 (literal -> CHARACTER .)
    $end            reduce using rule 75 (literal -> CHARACTER .)
    RIGHT_PARENT    reduce using rule 75 (literal -> CHARACTER .)
    RIGHT_BRACKET   reduce using rule 75 (literal -> CHARACTER .)
    RIGHT_CURLY_BRACKET reduce using rule 75 (literal -> CHARACTER .)
    COLON           reduce using rule 75 (literal -> CHARACTER .)
    FLOAT           reduce using rule 75 (literal -> CHARACTER .)
    INTEGER         reduce using rule 75 (literal -> CHARACTER .)
    CHARACTER       reduce using rule 75 (literal -> CHARACTER .)
    STRING          reduce using rule 75 (literal -> CHARACTER .)
    SYMBOL_IDENTIFIER reduce using rule 75 (literal -> CHARACTER .)
    SYMBOL_KEYWORD  reduce using rule 75 (literal -> CHARACTER .)
    SYMBOL_OPERATOR reduce using rule 75 (literal -> CHARACTER .)
    SYMBOL_STRING   reduce using rule 75 (literal -> CHARACTER .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 75 (literal -> CHARACTER .)
    MULTI_KEYWORD   reduce using rule 75 (literal -> CHARACTER .)


state 34

    (76) literal -> STRING .

    LEFT_PARENT     reduce using rule 76 (literal -> STRING .)
    LEFT_BRACKET    reduce using rule 76 (literal -> STRING .)
    IDENTIFIER      reduce using rule 76 (literal -> STRING .)
    QUASI_UNQUOTE   reduce using rule 76 (literal -> STRING .)
    LEFT_CURLY_BRACKET reduce using rule 76 (literal -> STRING .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 76 (literal -> STRING .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 76 (literal -> STRING .)
    SINGLE_CHAR_OPERATOR reduce using rule 76 (literal -> STRING .)
    MULTI_CHAR_OPERATOR reduce using rule 76 (literal -> STRING .)
    BAR             reduce using rule 76 (literal -> STRING .)
    STAR            reduce using rule 76 (literal -> STRING .)
    LESS_THAN       reduce using rule 76 (literal -> STRING .)
    GREATER_THAN    reduce using rule 76 (literal -> STRING .)
    SEMICOLON       reduce using rule 76 (literal -> STRING .)
    KEYWORD         reduce using rule 76 (literal -> STRING .)
    ASSIGNMENT      reduce using rule 76 (literal -> STRING .)
    COLON_COLON     reduce using rule 76 (literal -> STRING .)
    COMMA           reduce using rule 76 (literal -> STRING .)
    DOT             reduce using rule 76 (literal -> STRING .)
    $end            reduce using rule 76 (literal -> STRING .)
    RIGHT_PARENT    reduce using rule 76 (literal -> STRING .)
    RIGHT_BRACKET   reduce using rule 76 (literal -> STRING .)
    RIGHT_CURLY_BRACKET reduce using rule 76 (literal -> STRING .)
    COLON           reduce using rule 76 (literal -> STRING .)
    FLOAT           reduce using rule 76 (literal -> STRING .)
    INTEGER         reduce using rule 76 (literal -> STRING .)
    CHARACTER       reduce using rule 76 (literal -> STRING .)
    STRING          reduce using rule 76 (literal -> STRING .)
    SYMBOL_IDENTIFIER reduce using rule 76 (literal -> STRING .)
    SYMBOL_KEYWORD  reduce using rule 76 (literal -> STRING .)
    SYMBOL_OPERATOR reduce using rule 76 (literal -> STRING .)
    SYMBOL_STRING   reduce using rule 76 (literal -> STRING .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 76 (literal -> STRING .)
    MULTI_KEYWORD   reduce using rule 76 (literal -> STRING .)


state 35

    (77) literal -> SYMBOL_IDENTIFIER .

    LEFT_PARENT     reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    LEFT_BRACKET    reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    IDENTIFIER      reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    QUASI_UNQUOTE   reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    LEFT_CURLY_BRACKET reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    SINGLE_CHAR_OPERATOR reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    MULTI_CHAR_OPERATOR reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    BAR             reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    STAR            reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    LESS_THAN       reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    GREATER_THAN    reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    SEMICOLON       reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    KEYWORD         reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    ASSIGNMENT      reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    COLON_COLON     reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    COMMA           reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    DOT             reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    $end            reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    RIGHT_PARENT    reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    RIGHT_BRACKET   reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    RIGHT_CURLY_BRACKET reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    COLON           reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    FLOAT           reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    INTEGER         reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    CHARACTER       reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    STRING          reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    SYMBOL_IDENTIFIER reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    SYMBOL_KEYWORD  reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    SYMBOL_OPERATOR reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    SYMBOL_STRING   reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)
    MULTI_KEYWORD   reduce using rule 77 (literal -> SYMBOL_IDENTIFIER .)


state 36

    (78) literal -> SYMBOL_KEYWORD .

    LEFT_PARENT     reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    LEFT_BRACKET    reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    IDENTIFIER      reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    QUASI_UNQUOTE   reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    LEFT_CURLY_BRACKET reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    SINGLE_CHAR_OPERATOR reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    MULTI_CHAR_OPERATOR reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    BAR             reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    STAR            reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    LESS_THAN       reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    GREATER_THAN    reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    SEMICOLON       reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    KEYWORD         reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    ASSIGNMENT      reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    COLON_COLON     reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    COMMA           reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    DOT             reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    $end            reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    RIGHT_PARENT    reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    RIGHT_BRACKET   reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    RIGHT_CURLY_BRACKET reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    COLON           reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    FLOAT           reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    INTEGER         reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    CHARACTER       reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    STRING          reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    SYMBOL_IDENTIFIER reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    SYMBOL_KEYWORD  reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    SYMBOL_OPERATOR reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    SYMBOL_STRING   reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 78 (literal -> SYMBOL_KEYWORD .)
    MULTI_KEYWORD   reduce using rule 78 (literal -> SYMBOL_KEYWORD .)


state 37

    (79) literal -> SYMBOL_OPERATOR .

    LEFT_PARENT     reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    LEFT_BRACKET    reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    IDENTIFIER      reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    QUASI_UNQUOTE   reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    LEFT_CURLY_BRACKET reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    SINGLE_CHAR_OPERATOR reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    MULTI_CHAR_OPERATOR reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    BAR             reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    STAR            reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    LESS_THAN       reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    GREATER_THAN    reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    SEMICOLON       reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    KEYWORD         reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    ASSIGNMENT      reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    COLON_COLON     reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    COMMA           reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    DOT             reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    $end            reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    RIGHT_PARENT    reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    RIGHT_BRACKET   reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    RIGHT_CURLY_BRACKET reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    COLON           reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    FLOAT           reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    INTEGER         reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    CHARACTER       reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    STRING          reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    SYMBOL_IDENTIFIER reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    SYMBOL_KEYWORD  reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    SYMBOL_OPERATOR reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    SYMBOL_STRING   reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 79 (literal -> SYMBOL_OPERATOR .)
    MULTI_KEYWORD   reduce using rule 79 (literal -> SYMBOL_OPERATOR .)


state 38

    (80) literal -> SYMBOL_STRING .

    LEFT_PARENT     reduce using rule 80 (literal -> SYMBOL_STRING .)
    LEFT_BRACKET    reduce using rule 80 (literal -> SYMBOL_STRING .)
    IDENTIFIER      reduce using rule 80 (literal -> SYMBOL_STRING .)
    QUASI_UNQUOTE   reduce using rule 80 (literal -> SYMBOL_STRING .)
    LEFT_CURLY_BRACKET reduce using rule 80 (literal -> SYMBOL_STRING .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 80 (literal -> SYMBOL_STRING .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 80 (literal -> SYMBOL_STRING .)
    SINGLE_CHAR_OPERATOR reduce using rule 80 (literal -> SYMBOL_STRING .)
    MULTI_CHAR_OPERATOR reduce using rule 80 (literal -> SYMBOL_STRING .)
    BAR             reduce using rule 80 (literal -> SYMBOL_STRING .)
    STAR            reduce using rule 80 (literal -> SYMBOL_STRING .)
    LESS_THAN       reduce using rule 80 (literal -> SYMBOL_STRING .)
    GREATER_THAN    reduce using rule 80 (literal -> SYMBOL_STRING .)
    SEMICOLON       reduce using rule 80 (literal -> SYMBOL_STRING .)
    KEYWORD         reduce using rule 80 (literal -> SYMBOL_STRING .)
    ASSIGNMENT      reduce using rule 80 (literal -> SYMBOL_STRING .)
    COLON_COLON     reduce using rule 80 (literal -> SYMBOL_STRING .)
    COMMA           reduce using rule 80 (literal -> SYMBOL_STRING .)
    DOT             reduce using rule 80 (literal -> SYMBOL_STRING .)
    $end            reduce using rule 80 (literal -> SYMBOL_STRING .)
    RIGHT_PARENT    reduce using rule 80 (literal -> SYMBOL_STRING .)
    RIGHT_BRACKET   reduce using rule 80 (literal -> SYMBOL_STRING .)
    RIGHT_CURLY_BRACKET reduce using rule 80 (literal -> SYMBOL_STRING .)
    COLON           reduce using rule 80 (literal -> SYMBOL_STRING .)
    FLOAT           reduce using rule 80 (literal -> SYMBOL_STRING .)
    INTEGER         reduce using rule 80 (literal -> SYMBOL_STRING .)
    CHARACTER       reduce using rule 80 (literal -> SYMBOL_STRING .)
    STRING          reduce using rule 80 (literal -> SYMBOL_STRING .)
    SYMBOL_IDENTIFIER reduce using rule 80 (literal -> SYMBOL_STRING .)
    SYMBOL_KEYWORD  reduce using rule 80 (literal -> SYMBOL_STRING .)
    SYMBOL_OPERATOR reduce using rule 80 (literal -> SYMBOL_STRING .)
    SYMBOL_STRING   reduce using rule 80 (literal -> SYMBOL_STRING .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 80 (literal -> SYMBOL_STRING .)
    MULTI_KEYWORD   reduce using rule 80 (literal -> SYMBOL_STRING .)


state 39

    (81) literal -> LITERAL_ARRAY_LEFT_PARENT . literalArrayElements RIGHT_PARENT
    (82) literalArrayElements -> .
    (83) literalArrayElements -> . literalArrayElements literalArrayElement

    RIGHT_PARENT    reduce using rule 82 (literalArrayElements -> .)
    IDENTIFIER      reduce using rule 82 (literalArrayElements -> .)
    LEFT_PARENT     reduce using rule 82 (literalArrayElements -> .)
    FLOAT           reduce using rule 82 (literalArrayElements -> .)
    INTEGER         reduce using rule 82 (literalArrayElements -> .)
    CHARACTER       reduce using rule 82 (literalArrayElements -> .)
    STRING          reduce using rule 82 (literalArrayElements -> .)
    SYMBOL_IDENTIFIER reduce using rule 82 (literalArrayElements -> .)
    SYMBOL_KEYWORD  reduce using rule 82 (literalArrayElements -> .)
    SYMBOL_OPERATOR reduce using rule 82 (literalArrayElements -> .)
    SYMBOL_STRING   reduce using rule 82 (literalArrayElements -> .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 82 (literalArrayElements -> .)
    KEYWORD         reduce using rule 82 (literalArrayElements -> .)
    MULTI_KEYWORD   reduce using rule 82 (literalArrayElements -> .)
    SINGLE_CHAR_OPERATOR reduce using rule 82 (literalArrayElements -> .)
    MULTI_CHAR_OPERATOR reduce using rule 82 (literalArrayElements -> .)
    BAR             reduce using rule 82 (literalArrayElements -> .)
    STAR            reduce using rule 82 (literalArrayElements -> .)
    LESS_THAN       reduce using rule 82 (literalArrayElements -> .)
    GREATER_THAN    reduce using rule 82 (literalArrayElements -> .)

    literalArrayElements           shift and go to state 77

state 40

    (33) block -> LEFT_CURLY_BRACKET . optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (24) optionalBlockClosureHeader -> . blockClosureHeader
    (25) optionalBlockClosureHeader -> .
    (23) blockClosureHeader -> . blockArguments blockResultType BAR
    (34) blockArguments -> .
    (35) blockArguments -> . blockArguments blockArgument
    (36) blockArguments -> . blockArguments blockGenericArgument

    LESS_THAN       reduce using rule 25 (optionalBlockClosureHeader -> .)
    QUOTE           reduce using rule 25 (optionalBlockClosureHeader -> .)
    QUASI_QUOTE     reduce using rule 25 (optionalBlockClosureHeader -> .)
    QUASI_UNQUOTE   reduce using rule 25 (optionalBlockClosureHeader -> .)
    SPLICE          reduce using rule 25 (optionalBlockClosureHeader -> .)
    SINGLE_CHAR_OPERATOR reduce using rule 25 (optionalBlockClosureHeader -> .)
    MULTI_CHAR_OPERATOR reduce using rule 25 (optionalBlockClosureHeader -> .)
    STAR            reduce using rule 25 (optionalBlockClosureHeader -> .)
    KEYWORD         reduce using rule 25 (optionalBlockClosureHeader -> .)
    IDENTIFIER      reduce using rule 25 (optionalBlockClosureHeader -> .)
    LEFT_PARENT     reduce using rule 25 (optionalBlockClosureHeader -> .)
    FLOAT           reduce using rule 25 (optionalBlockClosureHeader -> .)
    INTEGER         reduce using rule 25 (optionalBlockClosureHeader -> .)
    CHARACTER       reduce using rule 25 (optionalBlockClosureHeader -> .)
    STRING          reduce using rule 25 (optionalBlockClosureHeader -> .)
    SYMBOL_IDENTIFIER reduce using rule 25 (optionalBlockClosureHeader -> .)
    SYMBOL_KEYWORD  reduce using rule 25 (optionalBlockClosureHeader -> .)
    SYMBOL_OPERATOR reduce using rule 25 (optionalBlockClosureHeader -> .)
    SYMBOL_STRING   reduce using rule 25 (optionalBlockClosureHeader -> .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 25 (optionalBlockClosureHeader -> .)
    LEFT_CURLY_BRACKET reduce using rule 25 (optionalBlockClosureHeader -> .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 25 (optionalBlockClosureHeader -> .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 25 (optionalBlockClosureHeader -> .)
    RIGHT_CURLY_BRACKET reduce using rule 25 (optionalBlockClosureHeader -> .)
    DOT             reduce using rule 25 (optionalBlockClosureHeader -> .)
    COLON_COLON     reduce using rule 34 (blockArguments -> .)
    COLON           reduce using rule 34 (blockArguments -> .)
    BAR             reduce using rule 34 (blockArguments -> .)

    optionalBlockClosureHeader     shift and go to state 78
    blockClosureHeader             shift and go to state 79
    blockArguments                 shift and go to state 80

state 41

    (97) makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET . dictionaryElements RIGHT_CURLY_BRACKET
    (93) dictionaryElements -> .
    (94) dictionaryElements -> . dictionaryElement
    (95) dictionaryElements -> . dictionaryElements DOT dictionaryElement
    (96) dictionaryElements -> . dictionaryElements DOT
    (91) dictionaryElement -> . dictionaryKey
    (92) dictionaryElement -> . dictionaryKey expression
    (89) dictionaryKey -> . KEYWORD
    (90) dictionaryKey -> . binaryExpression COLON
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    RIGHT_CURLY_BRACKET reduce using rule 93 (dictionaryElements -> .)
    DOT             reduce using rule 93 (dictionaryElements -> .)
    KEYWORD         shift and go to state 84
    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    dictionaryElements             shift and go to state 81
    dictionaryElement              shift and go to state 82
    dictionaryKey                  shift and go to state 83
    binaryExpression               shift and go to state 85
    prefixUnaryExpression          shift and go to state 11
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 42

    (98) makeByteArray -> BYTE_ARRAY_LEFT_BRACKET . expressionList RIGHT_BRACKET
    (1) expressionList -> . optionalExpression
    (2) expressionList -> . expressionList DOT optionalExpression
    (3) optionalExpression -> .
    (4) optionalExpression -> . expression
    (72) expression -> . commaExpression
    (70) commaExpression -> . commaExpressionContent
    (71) commaExpression -> . commaExpressionContent COMMA
    (68) commaExpressionContent -> . assignmentExpression
    (69) commaExpressionContent -> . commaExpressionContent COMMA assignmentExpression
    (66) assignmentExpression -> . lowPrecedenceExpression
    (67) assignmentExpression -> . lowPrecedenceExpression ASSIGNMENT assignmentExpression
    (63) lowPrecedenceExpression -> . chainExpression
    (64) lowPrecedenceExpression -> . lowPrecedenceExpression lowPrecedenceOperator chainExpression
    (59) chainExpression -> . binaryExpression optionalKeywordChain
    (60) chainExpression -> . binaryExpression chainedMessageKeyword optionalKeywordChain
    (61) chainExpression -> . chainedMessageKeyword
    (62) chainExpression -> . chainedMessageKeyword chainedMessages
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (49) chainedMessageArgument -> . KEYWORD binaryExpression
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    RIGHT_BRACKET   reduce using rule 3 (optionalExpression -> .)
    DOT             reduce using rule 3 (optionalExpression -> .)
    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    KEYWORD         shift and go to state 28
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    expressionList                 shift and go to state 86
    optionalExpression             shift and go to state 2
    expression                     shift and go to state 3
    commaExpression                shift and go to state 4
    commaExpressionContent         shift and go to state 5
    assignmentExpression           shift and go to state 6
    lowPrecedenceExpression        shift and go to state 7
    chainExpression                shift and go to state 8
    binaryExpression               shift and go to state 9
    chainedMessageKeyword          shift and go to state 10
    prefixUnaryExpression          shift and go to state 11
    chainedMessageArguments        shift and go to state 12
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    chainedMessageArgument         shift and go to state 15
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 43

    (2) expressionList -> expressionList DOT . optionalExpression
    (3) optionalExpression -> .
    (4) optionalExpression -> . expression
    (72) expression -> . commaExpression
    (70) commaExpression -> . commaExpressionContent
    (71) commaExpression -> . commaExpressionContent COMMA
    (68) commaExpressionContent -> . assignmentExpression
    (69) commaExpressionContent -> . commaExpressionContent COMMA assignmentExpression
    (66) assignmentExpression -> . lowPrecedenceExpression
    (67) assignmentExpression -> . lowPrecedenceExpression ASSIGNMENT assignmentExpression
    (63) lowPrecedenceExpression -> . chainExpression
    (64) lowPrecedenceExpression -> . lowPrecedenceExpression lowPrecedenceOperator chainExpression
    (59) chainExpression -> . binaryExpression optionalKeywordChain
    (60) chainExpression -> . binaryExpression chainedMessageKeyword optionalKeywordChain
    (61) chainExpression -> . chainedMessageKeyword
    (62) chainExpression -> . chainedMessageKeyword chainedMessages
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (49) chainedMessageArgument -> . KEYWORD binaryExpression
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    DOT             reduce using rule 3 (optionalExpression -> .)
    $end            reduce using rule 3 (optionalExpression -> .)
    RIGHT_BRACKET   reduce using rule 3 (optionalExpression -> .)
    RIGHT_PARENT    reduce using rule 3 (optionalExpression -> .)
    RIGHT_CURLY_BRACKET reduce using rule 3 (optionalExpression -> .)
    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    KEYWORD         shift and go to state 28
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    optionalExpression             shift and go to state 87
    expression                     shift and go to state 3
    commaExpression                shift and go to state 4
    commaExpressionContent         shift and go to state 5
    assignmentExpression           shift and go to state 6
    lowPrecedenceExpression        shift and go to state 7
    chainExpression                shift and go to state 8
    binaryExpression               shift and go to state 9
    chainedMessageKeyword          shift and go to state 10
    prefixUnaryExpression          shift and go to state 11
    chainedMessageArguments        shift and go to state 12
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    chainedMessageArgument         shift and go to state 15
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 44

    (71) commaExpression -> commaExpressionContent COMMA .
    (69) commaExpressionContent -> commaExpressionContent COMMA . assignmentExpression
    (66) assignmentExpression -> . lowPrecedenceExpression
    (67) assignmentExpression -> . lowPrecedenceExpression ASSIGNMENT assignmentExpression
    (63) lowPrecedenceExpression -> . chainExpression
    (64) lowPrecedenceExpression -> . lowPrecedenceExpression lowPrecedenceOperator chainExpression
    (59) chainExpression -> . binaryExpression optionalKeywordChain
    (60) chainExpression -> . binaryExpression chainedMessageKeyword optionalKeywordChain
    (61) chainExpression -> . chainedMessageKeyword
    (62) chainExpression -> . chainedMessageKeyword chainedMessages
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (49) chainedMessageArgument -> . KEYWORD binaryExpression
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    DOT             reduce using rule 71 (commaExpression -> commaExpressionContent COMMA .)
    $end            reduce using rule 71 (commaExpression -> commaExpressionContent COMMA .)
    RIGHT_PARENT    reduce using rule 71 (commaExpression -> commaExpressionContent COMMA .)
    RIGHT_BRACKET   reduce using rule 71 (commaExpression -> commaExpressionContent COMMA .)
    RIGHT_CURLY_BRACKET reduce using rule 71 (commaExpression -> commaExpressionContent COMMA .)
    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    KEYWORD         shift and go to state 28
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    assignmentExpression           shift and go to state 88
    lowPrecedenceExpression        shift and go to state 7
    chainExpression                shift and go to state 8
    binaryExpression               shift and go to state 9
    chainedMessageKeyword          shift and go to state 10
    prefixUnaryExpression          shift and go to state 11
    chainedMessageArguments        shift and go to state 12
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    chainedMessageArgument         shift and go to state 15
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 45

    (67) assignmentExpression -> lowPrecedenceExpression ASSIGNMENT . assignmentExpression
    (66) assignmentExpression -> . lowPrecedenceExpression
    (67) assignmentExpression -> . lowPrecedenceExpression ASSIGNMENT assignmentExpression
    (63) lowPrecedenceExpression -> . chainExpression
    (64) lowPrecedenceExpression -> . lowPrecedenceExpression lowPrecedenceOperator chainExpression
    (59) chainExpression -> . binaryExpression optionalKeywordChain
    (60) chainExpression -> . binaryExpression chainedMessageKeyword optionalKeywordChain
    (61) chainExpression -> . chainedMessageKeyword
    (62) chainExpression -> . chainedMessageKeyword chainedMessages
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (49) chainedMessageArgument -> . KEYWORD binaryExpression
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    KEYWORD         shift and go to state 28
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    lowPrecedenceExpression        shift and go to state 7
    assignmentExpression           shift and go to state 89
    chainExpression                shift and go to state 8
    binaryExpression               shift and go to state 9
    chainedMessageKeyword          shift and go to state 10
    prefixUnaryExpression          shift and go to state 11
    chainedMessageArguments        shift and go to state 12
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    chainedMessageArgument         shift and go to state 15
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 46

    (64) lowPrecedenceExpression -> lowPrecedenceExpression lowPrecedenceOperator . chainExpression
    (59) chainExpression -> . binaryExpression optionalKeywordChain
    (60) chainExpression -> . binaryExpression chainedMessageKeyword optionalKeywordChain
    (61) chainExpression -> . chainedMessageKeyword
    (62) chainExpression -> . chainedMessageKeyword chainedMessages
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (49) chainedMessageArgument -> . KEYWORD binaryExpression
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    KEYWORD         shift and go to state 28
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    chainExpression                shift and go to state 90
    binaryExpression               shift and go to state 9
    chainedMessageKeyword          shift and go to state 10
    prefixUnaryExpression          shift and go to state 11
    chainedMessageArguments        shift and go to state 12
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    chainedMessageArgument         shift and go to state 15
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 47

    (65) lowPrecedenceOperator -> COLON_COLON . anyOperator
    (99) anyOperator -> . SINGLE_CHAR_OPERATOR
    (100) anyOperator -> . MULTI_CHAR_OPERATOR
    (101) anyOperator -> . BAR
    (102) anyOperator -> . STAR
    (103) anyOperator -> . LESS_THAN
    (104) anyOperator -> . GREATER_THAN

    SINGLE_CHAR_OPERATOR shift and go to state 52
    MULTI_CHAR_OPERATOR shift and go to state 53
    BAR             shift and go to state 54
    STAR            shift and go to state 55
    LESS_THAN       shift and go to state 56
    GREATER_THAN    shift and go to state 57

    anyOperator                    shift and go to state 91

state 48

    (59) chainExpression -> binaryExpression optionalKeywordChain .

    ASSIGNMENT      reduce using rule 59 (chainExpression -> binaryExpression optionalKeywordChain .)
    COLON_COLON     reduce using rule 59 (chainExpression -> binaryExpression optionalKeywordChain .)
    COMMA           reduce using rule 59 (chainExpression -> binaryExpression optionalKeywordChain .)
    DOT             reduce using rule 59 (chainExpression -> binaryExpression optionalKeywordChain .)
    $end            reduce using rule 59 (chainExpression -> binaryExpression optionalKeywordChain .)
    RIGHT_PARENT    reduce using rule 59 (chainExpression -> binaryExpression optionalKeywordChain .)
    RIGHT_BRACKET   reduce using rule 59 (chainExpression -> binaryExpression optionalKeywordChain .)
    RIGHT_CURLY_BRACKET reduce using rule 59 (chainExpression -> binaryExpression optionalKeywordChain .)


state 49

    (60) chainExpression -> binaryExpression chainedMessageKeyword . optionalKeywordChain
    (57) optionalKeywordChain -> .
    (58) optionalKeywordChain -> . chainedMessages
    (55) chainedMessages -> . SEMICOLON chainedMessage
    (56) chainedMessages -> . chainedMessages SEMICOLON chainedMessage

    ASSIGNMENT      reduce using rule 57 (optionalKeywordChain -> .)
    COLON_COLON     reduce using rule 57 (optionalKeywordChain -> .)
    COMMA           reduce using rule 57 (optionalKeywordChain -> .)
    DOT             reduce using rule 57 (optionalKeywordChain -> .)
    $end            reduce using rule 57 (optionalKeywordChain -> .)
    RIGHT_PARENT    reduce using rule 57 (optionalKeywordChain -> .)
    RIGHT_BRACKET   reduce using rule 57 (optionalKeywordChain -> .)
    RIGHT_CURLY_BRACKET reduce using rule 57 (optionalKeywordChain -> .)
    SEMICOLON       shift and go to state 58

    optionalKeywordChain           shift and go to state 92
    chainedMessages                shift and go to state 51

state 50

    (48) binaryExpression -> binaryExpression anyOperator . prefixUnaryExpression
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    prefixUnaryExpression          shift and go to state 93
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 51

    (58) optionalKeywordChain -> chainedMessages .
    (56) chainedMessages -> chainedMessages . SEMICOLON chainedMessage

    ASSIGNMENT      reduce using rule 58 (optionalKeywordChain -> chainedMessages .)
    COLON_COLON     reduce using rule 58 (optionalKeywordChain -> chainedMessages .)
    COMMA           reduce using rule 58 (optionalKeywordChain -> chainedMessages .)
    DOT             reduce using rule 58 (optionalKeywordChain -> chainedMessages .)
    $end            reduce using rule 58 (optionalKeywordChain -> chainedMessages .)
    RIGHT_PARENT    reduce using rule 58 (optionalKeywordChain -> chainedMessages .)
    RIGHT_BRACKET   reduce using rule 58 (optionalKeywordChain -> chainedMessages .)
    RIGHT_CURLY_BRACKET reduce using rule 58 (optionalKeywordChain -> chainedMessages .)
    SEMICOLON       shift and go to state 94


state 52

    (99) anyOperator -> SINGLE_CHAR_OPERATOR .

    QUOTE           reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    QUASI_QUOTE     reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    QUASI_UNQUOTE   reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    SPLICE          reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    SINGLE_CHAR_OPERATOR reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    MULTI_CHAR_OPERATOR reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    STAR            reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    IDENTIFIER      reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    LEFT_PARENT     reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    FLOAT           reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    INTEGER         reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    CHARACTER       reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    STRING          reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    SYMBOL_IDENTIFIER reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    SYMBOL_KEYWORD  reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    SYMBOL_OPERATOR reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    SYMBOL_STRING   reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    LEFT_CURLY_BRACKET reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    KEYWORD         reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    RIGHT_PARENT    reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    MULTI_KEYWORD   reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    BAR             reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    LESS_THAN       reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)
    GREATER_THAN    reduce using rule 99 (anyOperator -> SINGLE_CHAR_OPERATOR .)


state 53

    (100) anyOperator -> MULTI_CHAR_OPERATOR .

    QUOTE           reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    QUASI_QUOTE     reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    QUASI_UNQUOTE   reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    SPLICE          reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    SINGLE_CHAR_OPERATOR reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    MULTI_CHAR_OPERATOR reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    STAR            reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    IDENTIFIER      reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    LEFT_PARENT     reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    FLOAT           reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    INTEGER         reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    CHARACTER       reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    STRING          reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    SYMBOL_IDENTIFIER reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    SYMBOL_KEYWORD  reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    SYMBOL_OPERATOR reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    SYMBOL_STRING   reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    LEFT_CURLY_BRACKET reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    KEYWORD         reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    RIGHT_PARENT    reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    MULTI_KEYWORD   reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    BAR             reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    LESS_THAN       reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)
    GREATER_THAN    reduce using rule 100 (anyOperator -> MULTI_CHAR_OPERATOR .)


state 54

    (101) anyOperator -> BAR .

    QUOTE           reduce using rule 101 (anyOperator -> BAR .)
    QUASI_QUOTE     reduce using rule 101 (anyOperator -> BAR .)
    QUASI_UNQUOTE   reduce using rule 101 (anyOperator -> BAR .)
    SPLICE          reduce using rule 101 (anyOperator -> BAR .)
    SINGLE_CHAR_OPERATOR reduce using rule 101 (anyOperator -> BAR .)
    MULTI_CHAR_OPERATOR reduce using rule 101 (anyOperator -> BAR .)
    STAR            reduce using rule 101 (anyOperator -> BAR .)
    IDENTIFIER      reduce using rule 101 (anyOperator -> BAR .)
    LEFT_PARENT     reduce using rule 101 (anyOperator -> BAR .)
    FLOAT           reduce using rule 101 (anyOperator -> BAR .)
    INTEGER         reduce using rule 101 (anyOperator -> BAR .)
    CHARACTER       reduce using rule 101 (anyOperator -> BAR .)
    STRING          reduce using rule 101 (anyOperator -> BAR .)
    SYMBOL_IDENTIFIER reduce using rule 101 (anyOperator -> BAR .)
    SYMBOL_KEYWORD  reduce using rule 101 (anyOperator -> BAR .)
    SYMBOL_OPERATOR reduce using rule 101 (anyOperator -> BAR .)
    SYMBOL_STRING   reduce using rule 101 (anyOperator -> BAR .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 101 (anyOperator -> BAR .)
    LEFT_CURLY_BRACKET reduce using rule 101 (anyOperator -> BAR .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 101 (anyOperator -> BAR .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 101 (anyOperator -> BAR .)
    KEYWORD         reduce using rule 101 (anyOperator -> BAR .)
    RIGHT_PARENT    reduce using rule 101 (anyOperator -> BAR .)
    MULTI_KEYWORD   reduce using rule 101 (anyOperator -> BAR .)
    BAR             reduce using rule 101 (anyOperator -> BAR .)
    LESS_THAN       reduce using rule 101 (anyOperator -> BAR .)
    GREATER_THAN    reduce using rule 101 (anyOperator -> BAR .)


state 55

    (102) anyOperator -> STAR .

    QUOTE           reduce using rule 102 (anyOperator -> STAR .)
    QUASI_QUOTE     reduce using rule 102 (anyOperator -> STAR .)
    QUASI_UNQUOTE   reduce using rule 102 (anyOperator -> STAR .)
    SPLICE          reduce using rule 102 (anyOperator -> STAR .)
    SINGLE_CHAR_OPERATOR reduce using rule 102 (anyOperator -> STAR .)
    MULTI_CHAR_OPERATOR reduce using rule 102 (anyOperator -> STAR .)
    STAR            reduce using rule 102 (anyOperator -> STAR .)
    IDENTIFIER      reduce using rule 102 (anyOperator -> STAR .)
    LEFT_PARENT     reduce using rule 102 (anyOperator -> STAR .)
    FLOAT           reduce using rule 102 (anyOperator -> STAR .)
    INTEGER         reduce using rule 102 (anyOperator -> STAR .)
    CHARACTER       reduce using rule 102 (anyOperator -> STAR .)
    STRING          reduce using rule 102 (anyOperator -> STAR .)
    SYMBOL_IDENTIFIER reduce using rule 102 (anyOperator -> STAR .)
    SYMBOL_KEYWORD  reduce using rule 102 (anyOperator -> STAR .)
    SYMBOL_OPERATOR reduce using rule 102 (anyOperator -> STAR .)
    SYMBOL_STRING   reduce using rule 102 (anyOperator -> STAR .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 102 (anyOperator -> STAR .)
    LEFT_CURLY_BRACKET reduce using rule 102 (anyOperator -> STAR .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 102 (anyOperator -> STAR .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 102 (anyOperator -> STAR .)
    KEYWORD         reduce using rule 102 (anyOperator -> STAR .)
    RIGHT_PARENT    reduce using rule 102 (anyOperator -> STAR .)
    MULTI_KEYWORD   reduce using rule 102 (anyOperator -> STAR .)
    BAR             reduce using rule 102 (anyOperator -> STAR .)
    LESS_THAN       reduce using rule 102 (anyOperator -> STAR .)
    GREATER_THAN    reduce using rule 102 (anyOperator -> STAR .)


state 56

    (103) anyOperator -> LESS_THAN .

    QUOTE           reduce using rule 103 (anyOperator -> LESS_THAN .)
    QUASI_QUOTE     reduce using rule 103 (anyOperator -> LESS_THAN .)
    QUASI_UNQUOTE   reduce using rule 103 (anyOperator -> LESS_THAN .)
    SPLICE          reduce using rule 103 (anyOperator -> LESS_THAN .)
    SINGLE_CHAR_OPERATOR reduce using rule 103 (anyOperator -> LESS_THAN .)
    MULTI_CHAR_OPERATOR reduce using rule 103 (anyOperator -> LESS_THAN .)
    STAR            reduce using rule 103 (anyOperator -> LESS_THAN .)
    IDENTIFIER      reduce using rule 103 (anyOperator -> LESS_THAN .)
    LEFT_PARENT     reduce using rule 103 (anyOperator -> LESS_THAN .)
    FLOAT           reduce using rule 103 (anyOperator -> LESS_THAN .)
    INTEGER         reduce using rule 103 (anyOperator -> LESS_THAN .)
    CHARACTER       reduce using rule 103 (anyOperator -> LESS_THAN .)
    STRING          reduce using rule 103 (anyOperator -> LESS_THAN .)
    SYMBOL_IDENTIFIER reduce using rule 103 (anyOperator -> LESS_THAN .)
    SYMBOL_KEYWORD  reduce using rule 103 (anyOperator -> LESS_THAN .)
    SYMBOL_OPERATOR reduce using rule 103 (anyOperator -> LESS_THAN .)
    SYMBOL_STRING   reduce using rule 103 (anyOperator -> LESS_THAN .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 103 (anyOperator -> LESS_THAN .)
    LEFT_CURLY_BRACKET reduce using rule 103 (anyOperator -> LESS_THAN .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 103 (anyOperator -> LESS_THAN .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 103 (anyOperator -> LESS_THAN .)
    KEYWORD         reduce using rule 103 (anyOperator -> LESS_THAN .)
    RIGHT_PARENT    reduce using rule 103 (anyOperator -> LESS_THAN .)
    MULTI_KEYWORD   reduce using rule 103 (anyOperator -> LESS_THAN .)
    BAR             reduce using rule 103 (anyOperator -> LESS_THAN .)
    LESS_THAN       reduce using rule 103 (anyOperator -> LESS_THAN .)
    GREATER_THAN    reduce using rule 103 (anyOperator -> LESS_THAN .)


state 57

    (104) anyOperator -> GREATER_THAN .

    QUOTE           reduce using rule 104 (anyOperator -> GREATER_THAN .)
    QUASI_QUOTE     reduce using rule 104 (anyOperator -> GREATER_THAN .)
    QUASI_UNQUOTE   reduce using rule 104 (anyOperator -> GREATER_THAN .)
    SPLICE          reduce using rule 104 (anyOperator -> GREATER_THAN .)
    SINGLE_CHAR_OPERATOR reduce using rule 104 (anyOperator -> GREATER_THAN .)
    MULTI_CHAR_OPERATOR reduce using rule 104 (anyOperator -> GREATER_THAN .)
    STAR            reduce using rule 104 (anyOperator -> GREATER_THAN .)
    IDENTIFIER      reduce using rule 104 (anyOperator -> GREATER_THAN .)
    LEFT_PARENT     reduce using rule 104 (anyOperator -> GREATER_THAN .)
    FLOAT           reduce using rule 104 (anyOperator -> GREATER_THAN .)
    INTEGER         reduce using rule 104 (anyOperator -> GREATER_THAN .)
    CHARACTER       reduce using rule 104 (anyOperator -> GREATER_THAN .)
    STRING          reduce using rule 104 (anyOperator -> GREATER_THAN .)
    SYMBOL_IDENTIFIER reduce using rule 104 (anyOperator -> GREATER_THAN .)
    SYMBOL_KEYWORD  reduce using rule 104 (anyOperator -> GREATER_THAN .)
    SYMBOL_OPERATOR reduce using rule 104 (anyOperator -> GREATER_THAN .)
    SYMBOL_STRING   reduce using rule 104 (anyOperator -> GREATER_THAN .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 104 (anyOperator -> GREATER_THAN .)
    LEFT_CURLY_BRACKET reduce using rule 104 (anyOperator -> GREATER_THAN .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 104 (anyOperator -> GREATER_THAN .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 104 (anyOperator -> GREATER_THAN .)
    KEYWORD         reduce using rule 104 (anyOperator -> GREATER_THAN .)
    RIGHT_PARENT    reduce using rule 104 (anyOperator -> GREATER_THAN .)
    MULTI_KEYWORD   reduce using rule 104 (anyOperator -> GREATER_THAN .)
    BAR             reduce using rule 104 (anyOperator -> GREATER_THAN .)
    LESS_THAN       reduce using rule 104 (anyOperator -> GREATER_THAN .)
    GREATER_THAN    reduce using rule 104 (anyOperator -> GREATER_THAN .)


state 58

    (55) chainedMessages -> SEMICOLON . chainedMessage
    (53) chainedMessage -> . chainedMessageKeyword
    (54) chainedMessage -> . expandableIdentifier
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (43) expandableIdentifier -> . IDENTIFIER
    (44) expandableIdentifier -> . QUASI_UNQUOTE primaryTerm
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (49) chainedMessageArgument -> . KEYWORD binaryExpression

    IDENTIFIER      shift and go to state 67
    QUASI_UNQUOTE   shift and go to state 68
    KEYWORD         shift and go to state 28

    chainedMessage                 shift and go to state 95
    chainedMessageKeyword          shift and go to state 96
    expandableIdentifier           shift and go to state 97
    chainedMessageArguments        shift and go to state 12
    chainedMessageArgument         shift and go to state 15

state 59

    (62) chainExpression -> chainedMessageKeyword chainedMessages .
    (56) chainedMessages -> chainedMessages . SEMICOLON chainedMessage

    ASSIGNMENT      reduce using rule 62 (chainExpression -> chainedMessageKeyword chainedMessages .)
    COLON_COLON     reduce using rule 62 (chainExpression -> chainedMessageKeyword chainedMessages .)
    COMMA           reduce using rule 62 (chainExpression -> chainedMessageKeyword chainedMessages .)
    DOT             reduce using rule 62 (chainExpression -> chainedMessageKeyword chainedMessages .)
    $end            reduce using rule 62 (chainExpression -> chainedMessageKeyword chainedMessages .)
    RIGHT_PARENT    reduce using rule 62 (chainExpression -> chainedMessageKeyword chainedMessages .)
    RIGHT_BRACKET   reduce using rule 62 (chainExpression -> chainedMessageKeyword chainedMessages .)
    RIGHT_CURLY_BRACKET reduce using rule 62 (chainExpression -> chainedMessageKeyword chainedMessages .)
    SEMICOLON       shift and go to state 94


state 60

    (51) chainedMessageArguments -> chainedMessageArguments chainedMessageArgument .

    KEYWORD         reduce using rule 51 (chainedMessageArguments -> chainedMessageArguments chainedMessageArgument .)
    SEMICOLON       reduce using rule 51 (chainedMessageArguments -> chainedMessageArguments chainedMessageArgument .)
    ASSIGNMENT      reduce using rule 51 (chainedMessageArguments -> chainedMessageArguments chainedMessageArgument .)
    COLON_COLON     reduce using rule 51 (chainedMessageArguments -> chainedMessageArguments chainedMessageArgument .)
    COMMA           reduce using rule 51 (chainedMessageArguments -> chainedMessageArguments chainedMessageArgument .)
    DOT             reduce using rule 51 (chainedMessageArguments -> chainedMessageArguments chainedMessageArgument .)
    $end            reduce using rule 51 (chainedMessageArguments -> chainedMessageArguments chainedMessageArgument .)
    RIGHT_PARENT    reduce using rule 51 (chainedMessageArguments -> chainedMessageArguments chainedMessageArgument .)
    RIGHT_BRACKET   reduce using rule 51 (chainedMessageArguments -> chainedMessageArguments chainedMessageArgument .)
    RIGHT_CURLY_BRACKET reduce using rule 51 (chainedMessageArguments -> chainedMessageArguments chainedMessageArgument .)


state 61

    (17) primaryExpression -> primaryExpression expandableIdentifier .

    LEFT_PARENT     reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    LEFT_BRACKET    reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    IDENTIFIER      reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    QUASI_UNQUOTE   reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    LEFT_CURLY_BRACKET reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    SINGLE_CHAR_OPERATOR reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    MULTI_CHAR_OPERATOR reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    BAR             reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    STAR            reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    LESS_THAN       reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    GREATER_THAN    reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    SEMICOLON       reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    KEYWORD         reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    ASSIGNMENT      reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    COLON_COLON     reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    COMMA           reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    DOT             reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    $end            reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    RIGHT_PARENT    reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    RIGHT_BRACKET   reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    RIGHT_CURLY_BRACKET reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)
    COLON           reduce using rule 17 (primaryExpression -> primaryExpression expandableIdentifier .)


state 62

    (18) primaryExpression -> primaryExpression LEFT_PARENT . expressionList RIGHT_PARENT
    (1) expressionList -> . optionalExpression
    (2) expressionList -> . expressionList DOT optionalExpression
    (3) optionalExpression -> .
    (4) optionalExpression -> . expression
    (72) expression -> . commaExpression
    (70) commaExpression -> . commaExpressionContent
    (71) commaExpression -> . commaExpressionContent COMMA
    (68) commaExpressionContent -> . assignmentExpression
    (69) commaExpressionContent -> . commaExpressionContent COMMA assignmentExpression
    (66) assignmentExpression -> . lowPrecedenceExpression
    (67) assignmentExpression -> . lowPrecedenceExpression ASSIGNMENT assignmentExpression
    (63) lowPrecedenceExpression -> . chainExpression
    (64) lowPrecedenceExpression -> . lowPrecedenceExpression lowPrecedenceOperator chainExpression
    (59) chainExpression -> . binaryExpression optionalKeywordChain
    (60) chainExpression -> . binaryExpression chainedMessageKeyword optionalKeywordChain
    (61) chainExpression -> . chainedMessageKeyword
    (62) chainExpression -> . chainedMessageKeyword chainedMessages
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (49) chainedMessageArgument -> . KEYWORD binaryExpression
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    RIGHT_PARENT    reduce using rule 3 (optionalExpression -> .)
    DOT             reduce using rule 3 (optionalExpression -> .)
    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    KEYWORD         shift and go to state 28
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    primaryExpression              shift and go to state 13
    expressionList                 shift and go to state 98
    optionalExpression             shift and go to state 2
    expression                     shift and go to state 3
    commaExpression                shift and go to state 4
    commaExpressionContent         shift and go to state 5
    assignmentExpression           shift and go to state 6
    lowPrecedenceExpression        shift and go to state 7
    chainExpression                shift and go to state 8
    binaryExpression               shift and go to state 9
    chainedMessageKeyword          shift and go to state 10
    prefixUnaryExpression          shift and go to state 11
    chainedMessageArguments        shift and go to state 12
    anyPrefixOperator              shift and go to state 14
    chainedMessageArgument         shift and go to state 15
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 63

    (19) primaryExpression -> primaryExpression LEFT_BRACKET . expressionList RIGHT_BRACKET
    (1) expressionList -> . optionalExpression
    (2) expressionList -> . expressionList DOT optionalExpression
    (3) optionalExpression -> .
    (4) optionalExpression -> . expression
    (72) expression -> . commaExpression
    (70) commaExpression -> . commaExpressionContent
    (71) commaExpression -> . commaExpressionContent COMMA
    (68) commaExpressionContent -> . assignmentExpression
    (69) commaExpressionContent -> . commaExpressionContent COMMA assignmentExpression
    (66) assignmentExpression -> . lowPrecedenceExpression
    (67) assignmentExpression -> . lowPrecedenceExpression ASSIGNMENT assignmentExpression
    (63) lowPrecedenceExpression -> . chainExpression
    (64) lowPrecedenceExpression -> . lowPrecedenceExpression lowPrecedenceOperator chainExpression
    (59) chainExpression -> . binaryExpression optionalKeywordChain
    (60) chainExpression -> . binaryExpression chainedMessageKeyword optionalKeywordChain
    (61) chainExpression -> . chainedMessageKeyword
    (62) chainExpression -> . chainedMessageKeyword chainedMessages
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (49) chainedMessageArgument -> . KEYWORD binaryExpression
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    RIGHT_BRACKET   reduce using rule 3 (optionalExpression -> .)
    DOT             reduce using rule 3 (optionalExpression -> .)
    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    KEYWORD         shift and go to state 28
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    primaryExpression              shift and go to state 13
    expressionList                 shift and go to state 99
    optionalExpression             shift and go to state 2
    expression                     shift and go to state 3
    commaExpression                shift and go to state 4
    commaExpressionContent         shift and go to state 5
    assignmentExpression           shift and go to state 6
    lowPrecedenceExpression        shift and go to state 7
    chainExpression                shift and go to state 8
    binaryExpression               shift and go to state 9
    chainedMessageKeyword          shift and go to state 10
    prefixUnaryExpression          shift and go to state 11
    chainedMessageArguments        shift and go to state 12
    anyPrefixOperator              shift and go to state 14
    chainedMessageArgument         shift and go to state 15
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 64

    (20) primaryExpression -> primaryExpression block .

    LEFT_PARENT     reduce using rule 20 (primaryExpression -> primaryExpression block .)
    LEFT_BRACKET    reduce using rule 20 (primaryExpression -> primaryExpression block .)
    IDENTIFIER      reduce using rule 20 (primaryExpression -> primaryExpression block .)
    QUASI_UNQUOTE   reduce using rule 20 (primaryExpression -> primaryExpression block .)
    LEFT_CURLY_BRACKET reduce using rule 20 (primaryExpression -> primaryExpression block .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 20 (primaryExpression -> primaryExpression block .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 20 (primaryExpression -> primaryExpression block .)
    SINGLE_CHAR_OPERATOR reduce using rule 20 (primaryExpression -> primaryExpression block .)
    MULTI_CHAR_OPERATOR reduce using rule 20 (primaryExpression -> primaryExpression block .)
    BAR             reduce using rule 20 (primaryExpression -> primaryExpression block .)
    STAR            reduce using rule 20 (primaryExpression -> primaryExpression block .)
    LESS_THAN       reduce using rule 20 (primaryExpression -> primaryExpression block .)
    GREATER_THAN    reduce using rule 20 (primaryExpression -> primaryExpression block .)
    SEMICOLON       reduce using rule 20 (primaryExpression -> primaryExpression block .)
    KEYWORD         reduce using rule 20 (primaryExpression -> primaryExpression block .)
    ASSIGNMENT      reduce using rule 20 (primaryExpression -> primaryExpression block .)
    COLON_COLON     reduce using rule 20 (primaryExpression -> primaryExpression block .)
    COMMA           reduce using rule 20 (primaryExpression -> primaryExpression block .)
    DOT             reduce using rule 20 (primaryExpression -> primaryExpression block .)
    $end            reduce using rule 20 (primaryExpression -> primaryExpression block .)
    RIGHT_PARENT    reduce using rule 20 (primaryExpression -> primaryExpression block .)
    RIGHT_BRACKET   reduce using rule 20 (primaryExpression -> primaryExpression block .)
    RIGHT_CURLY_BRACKET reduce using rule 20 (primaryExpression -> primaryExpression block .)
    COLON           reduce using rule 20 (primaryExpression -> primaryExpression block .)


state 65

    (21) primaryExpression -> primaryExpression makeDictionary .

    LEFT_PARENT     reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    LEFT_BRACKET    reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    IDENTIFIER      reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    QUASI_UNQUOTE   reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    LEFT_CURLY_BRACKET reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    SINGLE_CHAR_OPERATOR reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    MULTI_CHAR_OPERATOR reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    BAR             reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    STAR            reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    LESS_THAN       reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    GREATER_THAN    reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    SEMICOLON       reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    KEYWORD         reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    ASSIGNMENT      reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    COLON_COLON     reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    COMMA           reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    DOT             reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    $end            reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    RIGHT_PARENT    reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    RIGHT_BRACKET   reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    RIGHT_CURLY_BRACKET reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)
    COLON           reduce using rule 21 (primaryExpression -> primaryExpression makeDictionary .)


state 66

    (22) primaryExpression -> primaryExpression makeByteArray .

    LEFT_PARENT     reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    LEFT_BRACKET    reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    IDENTIFIER      reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    QUASI_UNQUOTE   reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    LEFT_CURLY_BRACKET reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    SINGLE_CHAR_OPERATOR reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    MULTI_CHAR_OPERATOR reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    BAR             reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    STAR            reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    LESS_THAN       reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    GREATER_THAN    reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    SEMICOLON       reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    KEYWORD         reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    ASSIGNMENT      reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    COLON_COLON     reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    COMMA           reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    DOT             reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    $end            reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    RIGHT_PARENT    reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    RIGHT_BRACKET   reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    RIGHT_CURLY_BRACKET reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)
    COLON           reduce using rule 22 (primaryExpression -> primaryExpression makeByteArray .)


state 67

    (43) expandableIdentifier -> IDENTIFIER .

    LEFT_PARENT     reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    LEFT_BRACKET    reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    QUASI_UNQUOTE   reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    LEFT_CURLY_BRACKET reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    SINGLE_CHAR_OPERATOR reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    MULTI_CHAR_OPERATOR reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    BAR             reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    STAR            reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    LESS_THAN       reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    SEMICOLON       reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    KEYWORD         reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    ASSIGNMENT      reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    COLON_COLON     reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    COMMA           reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    DOT             reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    $end            reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    RIGHT_PARENT    reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    RIGHT_BRACKET   reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    RIGHT_CURLY_BRACKET reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)
    COLON           reduce using rule 43 (expandableIdentifier -> IDENTIFIER .)


state 68

    (44) expandableIdentifier -> QUASI_UNQUOTE . primaryTerm
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    primaryTerm                    shift and go to state 100
    literal                        shift and go to state 30
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24

state 69

    (46) prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .

    SINGLE_CHAR_OPERATOR reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    MULTI_CHAR_OPERATOR reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    BAR             reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    STAR            reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    LESS_THAN       reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    GREATER_THAN    reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    SEMICOLON       reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    KEYWORD         reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    ASSIGNMENT      reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    COLON_COLON     reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    COMMA           reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    DOT             reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    $end            reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    RIGHT_PARENT    reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    RIGHT_BRACKET   reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)
    COLON           reduce using rule 46 (prefixUnaryExpression -> anyPrefixOperator prefixUnaryExpression .)


state 70

    (13) primaryExpression -> QUOTE primaryTerm .

    LEFT_PARENT     reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    LEFT_BRACKET    reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    IDENTIFIER      reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    QUASI_UNQUOTE   reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    LEFT_CURLY_BRACKET reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    SINGLE_CHAR_OPERATOR reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    MULTI_CHAR_OPERATOR reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    BAR             reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    STAR            reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    LESS_THAN       reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    GREATER_THAN    reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    SEMICOLON       reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    KEYWORD         reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    ASSIGNMENT      reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    COLON_COLON     reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    COMMA           reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    DOT             reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    $end            reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    RIGHT_PARENT    reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    RIGHT_BRACKET   reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    RIGHT_CURLY_BRACKET reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)
    COLON           reduce using rule 13 (primaryExpression -> QUOTE primaryTerm .)


state 71

    (14) primaryExpression -> QUASI_QUOTE primaryTerm .

    LEFT_PARENT     reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    LEFT_BRACKET    reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    IDENTIFIER      reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    QUASI_UNQUOTE   reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    LEFT_CURLY_BRACKET reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    SINGLE_CHAR_OPERATOR reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    MULTI_CHAR_OPERATOR reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    BAR             reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    STAR            reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    LESS_THAN       reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    GREATER_THAN    reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    SEMICOLON       reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    KEYWORD         reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    ASSIGNMENT      reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    COLON_COLON     reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    COMMA           reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    DOT             reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    $end            reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    RIGHT_PARENT    reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    RIGHT_BRACKET   reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    RIGHT_CURLY_BRACKET reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)
    COLON           reduce using rule 14 (primaryExpression -> QUASI_QUOTE primaryTerm .)


state 72

    (15) primaryExpression -> QUASI_UNQUOTE primaryTerm .

    LEFT_PARENT     reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    LEFT_BRACKET    reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    IDENTIFIER      reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    QUASI_UNQUOTE   reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    LEFT_CURLY_BRACKET reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    SINGLE_CHAR_OPERATOR reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    MULTI_CHAR_OPERATOR reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    BAR             reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    STAR            reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    LESS_THAN       reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    GREATER_THAN    reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    SEMICOLON       reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    KEYWORD         reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    ASSIGNMENT      reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    COLON_COLON     reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    COMMA           reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    DOT             reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    $end            reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    RIGHT_PARENT    reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    RIGHT_BRACKET   reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    RIGHT_CURLY_BRACKET reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)
    COLON           reduce using rule 15 (primaryExpression -> QUASI_UNQUOTE primaryTerm .)


state 73

    (16) primaryExpression -> SPLICE primaryTerm .

    LEFT_PARENT     reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    LEFT_BRACKET    reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    IDENTIFIER      reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    QUASI_UNQUOTE   reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    LEFT_CURLY_BRACKET reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    SINGLE_CHAR_OPERATOR reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    MULTI_CHAR_OPERATOR reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    BAR             reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    STAR            reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    LESS_THAN       reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    GREATER_THAN    reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    SEMICOLON       reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    KEYWORD         reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    ASSIGNMENT      reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    COLON_COLON     reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    COMMA           reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    DOT             reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    $end            reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    RIGHT_PARENT    reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    RIGHT_BRACKET   reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    RIGHT_CURLY_BRACKET reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)
    COLON           reduce using rule 16 (primaryExpression -> SPLICE primaryTerm .)


state 74

    (10) primaryTerm -> LEFT_PARENT RIGHT_PARENT .

    LEFT_PARENT     reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    LEFT_BRACKET    reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    IDENTIFIER      reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    QUASI_UNQUOTE   reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    LEFT_CURLY_BRACKET reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    SINGLE_CHAR_OPERATOR reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    MULTI_CHAR_OPERATOR reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    BAR             reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    STAR            reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    LESS_THAN       reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    GREATER_THAN    reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    SEMICOLON       reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    KEYWORD         reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    ASSIGNMENT      reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    COLON_COLON     reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    COMMA           reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    DOT             reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    $end            reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    RIGHT_PARENT    reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    RIGHT_BRACKET   reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    RIGHT_CURLY_BRACKET reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)
    COLON           reduce using rule 10 (primaryTerm -> LEFT_PARENT RIGHT_PARENT .)


state 75

    (11) primaryTerm -> LEFT_PARENT expression . RIGHT_PARENT

    RIGHT_PARENT    shift and go to state 101


state 76

    (49) chainedMessageArgument -> KEYWORD binaryExpression .
    (48) binaryExpression -> binaryExpression . anyOperator prefixUnaryExpression
    (99) anyOperator -> . SINGLE_CHAR_OPERATOR
    (100) anyOperator -> . MULTI_CHAR_OPERATOR
    (101) anyOperator -> . BAR
    (102) anyOperator -> . STAR
    (103) anyOperator -> . LESS_THAN
    (104) anyOperator -> . GREATER_THAN

    KEYWORD         reduce using rule 49 (chainedMessageArgument -> KEYWORD binaryExpression .)
    SEMICOLON       reduce using rule 49 (chainedMessageArgument -> KEYWORD binaryExpression .)
    ASSIGNMENT      reduce using rule 49 (chainedMessageArgument -> KEYWORD binaryExpression .)
    COLON_COLON     reduce using rule 49 (chainedMessageArgument -> KEYWORD binaryExpression .)
    COMMA           reduce using rule 49 (chainedMessageArgument -> KEYWORD binaryExpression .)
    DOT             reduce using rule 49 (chainedMessageArgument -> KEYWORD binaryExpression .)
    $end            reduce using rule 49 (chainedMessageArgument -> KEYWORD binaryExpression .)
    RIGHT_PARENT    reduce using rule 49 (chainedMessageArgument -> KEYWORD binaryExpression .)
    RIGHT_BRACKET   reduce using rule 49 (chainedMessageArgument -> KEYWORD binaryExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 49 (chainedMessageArgument -> KEYWORD binaryExpression .)
    SINGLE_CHAR_OPERATOR shift and go to state 52
    MULTI_CHAR_OPERATOR shift and go to state 53
    BAR             shift and go to state 54
    STAR            shift and go to state 55
    LESS_THAN       shift and go to state 56
    GREATER_THAN    shift and go to state 57

    anyOperator                    shift and go to state 50

state 77

    (81) literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements . RIGHT_PARENT
    (83) literalArrayElements -> literalArrayElements . literalArrayElement
    (84) literalArrayElement -> . literal
    (85) literalArrayElement -> . IDENTIFIER
    (86) literalArrayElement -> . anyKeyword
    (87) literalArrayElement -> . anyOperator
    (88) literalArrayElement -> . LEFT_PARENT literalArrayElements RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (108) anyKeyword -> . KEYWORD
    (109) anyKeyword -> . MULTI_KEYWORD
    (99) anyOperator -> . SINGLE_CHAR_OPERATOR
    (100) anyOperator -> . MULTI_CHAR_OPERATOR
    (101) anyOperator -> . BAR
    (102) anyOperator -> . STAR
    (103) anyOperator -> . LESS_THAN
    (104) anyOperator -> . GREATER_THAN

    RIGHT_PARENT    shift and go to state 102
    IDENTIFIER      shift and go to state 105
    LEFT_PARENT     shift and go to state 108
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    KEYWORD         shift and go to state 109
    MULTI_KEYWORD   shift and go to state 110
    SINGLE_CHAR_OPERATOR shift and go to state 52
    MULTI_CHAR_OPERATOR shift and go to state 53
    BAR             shift and go to state 54
    STAR            shift and go to state 55
    LESS_THAN       shift and go to state 56
    GREATER_THAN    shift and go to state 57

    literalArrayElement            shift and go to state 103
    literal                        shift and go to state 104
    anyKeyword                     shift and go to state 106
    anyOperator                    shift and go to state 107

state 78

    (33) block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader . pragmaList expressionList RIGHT_CURLY_BRACKET
    (26) pragmaList -> .
    (27) pragmaList -> . pragmaList pragma

    LESS_THAN       reduce using rule 26 (pragmaList -> .)
    QUOTE           reduce using rule 26 (pragmaList -> .)
    QUASI_QUOTE     reduce using rule 26 (pragmaList -> .)
    QUASI_UNQUOTE   reduce using rule 26 (pragmaList -> .)
    SPLICE          reduce using rule 26 (pragmaList -> .)
    SINGLE_CHAR_OPERATOR reduce using rule 26 (pragmaList -> .)
    MULTI_CHAR_OPERATOR reduce using rule 26 (pragmaList -> .)
    STAR            reduce using rule 26 (pragmaList -> .)
    KEYWORD         reduce using rule 26 (pragmaList -> .)
    IDENTIFIER      reduce using rule 26 (pragmaList -> .)
    LEFT_PARENT     reduce using rule 26 (pragmaList -> .)
    FLOAT           reduce using rule 26 (pragmaList -> .)
    INTEGER         reduce using rule 26 (pragmaList -> .)
    CHARACTER       reduce using rule 26 (pragmaList -> .)
    STRING          reduce using rule 26 (pragmaList -> .)
    SYMBOL_IDENTIFIER reduce using rule 26 (pragmaList -> .)
    SYMBOL_KEYWORD  reduce using rule 26 (pragmaList -> .)
    SYMBOL_OPERATOR reduce using rule 26 (pragmaList -> .)
    SYMBOL_STRING   reduce using rule 26 (pragmaList -> .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 26 (pragmaList -> .)
    LEFT_CURLY_BRACKET reduce using rule 26 (pragmaList -> .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 26 (pragmaList -> .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 26 (pragmaList -> .)
    RIGHT_CURLY_BRACKET reduce using rule 26 (pragmaList -> .)
    DOT             reduce using rule 26 (pragmaList -> .)

    pragmaList                     shift and go to state 111

state 79

    (24) optionalBlockClosureHeader -> blockClosureHeader .

    LESS_THAN       reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    QUOTE           reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    QUASI_QUOTE     reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    QUASI_UNQUOTE   reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    SPLICE          reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    SINGLE_CHAR_OPERATOR reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    MULTI_CHAR_OPERATOR reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    STAR            reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    KEYWORD         reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    IDENTIFIER      reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    LEFT_PARENT     reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    FLOAT           reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    INTEGER         reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    CHARACTER       reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    STRING          reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    SYMBOL_IDENTIFIER reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    SYMBOL_KEYWORD  reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    SYMBOL_OPERATOR reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    SYMBOL_STRING   reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    LEFT_CURLY_BRACKET reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    RIGHT_CURLY_BRACKET reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)
    DOT             reduce using rule 24 (optionalBlockClosureHeader -> blockClosureHeader .)


state 80

    (23) blockClosureHeader -> blockArguments . blockResultType BAR
    (35) blockArguments -> blockArguments . blockArgument
    (36) blockArguments -> blockArguments . blockGenericArgument
    (41) blockResultType -> .
    (42) blockResultType -> . COLON_COLON primaryExpression
    (40) blockArgument -> . COLON optionalBlockArgumentType expandableIdentifier
    (39) blockGenericArgument -> . COLON STAR optionalBlockArgumentType expandableIdentifier

    BAR             reduce using rule 41 (blockResultType -> .)
    COLON_COLON     shift and go to state 115
    COLON           shift and go to state 116

    blockResultType                shift and go to state 112
    blockArgument                  shift and go to state 113
    blockGenericArgument           shift and go to state 114

state 81

    (97) makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements . RIGHT_CURLY_BRACKET
    (95) dictionaryElements -> dictionaryElements . DOT dictionaryElement
    (96) dictionaryElements -> dictionaryElements . DOT

    RIGHT_CURLY_BRACKET shift and go to state 117
    DOT             shift and go to state 118


state 82

    (94) dictionaryElements -> dictionaryElement .

    RIGHT_CURLY_BRACKET reduce using rule 94 (dictionaryElements -> dictionaryElement .)
    DOT             reduce using rule 94 (dictionaryElements -> dictionaryElement .)


state 83

    (91) dictionaryElement -> dictionaryKey .
    (92) dictionaryElement -> dictionaryKey . expression
    (72) expression -> . commaExpression
    (70) commaExpression -> . commaExpressionContent
    (71) commaExpression -> . commaExpressionContent COMMA
    (68) commaExpressionContent -> . assignmentExpression
    (69) commaExpressionContent -> . commaExpressionContent COMMA assignmentExpression
    (66) assignmentExpression -> . lowPrecedenceExpression
    (67) assignmentExpression -> . lowPrecedenceExpression ASSIGNMENT assignmentExpression
    (63) lowPrecedenceExpression -> . chainExpression
    (64) lowPrecedenceExpression -> . lowPrecedenceExpression lowPrecedenceOperator chainExpression
    (59) chainExpression -> . binaryExpression optionalKeywordChain
    (60) chainExpression -> . binaryExpression chainedMessageKeyword optionalKeywordChain
    (61) chainExpression -> . chainedMessageKeyword
    (62) chainExpression -> . chainedMessageKeyword chainedMessages
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (49) chainedMessageArgument -> . KEYWORD binaryExpression
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    RIGHT_CURLY_BRACKET reduce using rule 91 (dictionaryElement -> dictionaryKey .)
    DOT             reduce using rule 91 (dictionaryElement -> dictionaryKey .)
    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    KEYWORD         shift and go to state 28
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    expression                     shift and go to state 119
    commaExpression                shift and go to state 4
    commaExpressionContent         shift and go to state 5
    assignmentExpression           shift and go to state 6
    lowPrecedenceExpression        shift and go to state 7
    chainExpression                shift and go to state 8
    binaryExpression               shift and go to state 9
    chainedMessageKeyword          shift and go to state 10
    prefixUnaryExpression          shift and go to state 11
    chainedMessageArguments        shift and go to state 12
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    chainedMessageArgument         shift and go to state 15
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 84

    (89) dictionaryKey -> KEYWORD .

    QUOTE           reduce using rule 89 (dictionaryKey -> KEYWORD .)
    QUASI_QUOTE     reduce using rule 89 (dictionaryKey -> KEYWORD .)
    QUASI_UNQUOTE   reduce using rule 89 (dictionaryKey -> KEYWORD .)
    SPLICE          reduce using rule 89 (dictionaryKey -> KEYWORD .)
    SINGLE_CHAR_OPERATOR reduce using rule 89 (dictionaryKey -> KEYWORD .)
    MULTI_CHAR_OPERATOR reduce using rule 89 (dictionaryKey -> KEYWORD .)
    STAR            reduce using rule 89 (dictionaryKey -> KEYWORD .)
    KEYWORD         reduce using rule 89 (dictionaryKey -> KEYWORD .)
    IDENTIFIER      reduce using rule 89 (dictionaryKey -> KEYWORD .)
    LEFT_PARENT     reduce using rule 89 (dictionaryKey -> KEYWORD .)
    FLOAT           reduce using rule 89 (dictionaryKey -> KEYWORD .)
    INTEGER         reduce using rule 89 (dictionaryKey -> KEYWORD .)
    CHARACTER       reduce using rule 89 (dictionaryKey -> KEYWORD .)
    STRING          reduce using rule 89 (dictionaryKey -> KEYWORD .)
    SYMBOL_IDENTIFIER reduce using rule 89 (dictionaryKey -> KEYWORD .)
    SYMBOL_KEYWORD  reduce using rule 89 (dictionaryKey -> KEYWORD .)
    SYMBOL_OPERATOR reduce using rule 89 (dictionaryKey -> KEYWORD .)
    SYMBOL_STRING   reduce using rule 89 (dictionaryKey -> KEYWORD .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 89 (dictionaryKey -> KEYWORD .)
    LEFT_CURLY_BRACKET reduce using rule 89 (dictionaryKey -> KEYWORD .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 89 (dictionaryKey -> KEYWORD .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 89 (dictionaryKey -> KEYWORD .)
    RIGHT_CURLY_BRACKET reduce using rule 89 (dictionaryKey -> KEYWORD .)
    DOT             reduce using rule 89 (dictionaryKey -> KEYWORD .)


state 85

    (90) dictionaryKey -> binaryExpression . COLON
    (48) binaryExpression -> binaryExpression . anyOperator prefixUnaryExpression
    (99) anyOperator -> . SINGLE_CHAR_OPERATOR
    (100) anyOperator -> . MULTI_CHAR_OPERATOR
    (101) anyOperator -> . BAR
    (102) anyOperator -> . STAR
    (103) anyOperator -> . LESS_THAN
    (104) anyOperator -> . GREATER_THAN

    COLON           shift and go to state 120
    SINGLE_CHAR_OPERATOR shift and go to state 52
    MULTI_CHAR_OPERATOR shift and go to state 53
    BAR             shift and go to state 54
    STAR            shift and go to state 55
    LESS_THAN       shift and go to state 56
    GREATER_THAN    shift and go to state 57

    anyOperator                    shift and go to state 50

state 86

    (98) makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList . RIGHT_BRACKET
    (2) expressionList -> expressionList . DOT optionalExpression

    RIGHT_BRACKET   shift and go to state 121
    DOT             shift and go to state 43


state 87

    (2) expressionList -> expressionList DOT optionalExpression .

    DOT             reduce using rule 2 (expressionList -> expressionList DOT optionalExpression .)
    $end            reduce using rule 2 (expressionList -> expressionList DOT optionalExpression .)
    RIGHT_BRACKET   reduce using rule 2 (expressionList -> expressionList DOT optionalExpression .)
    RIGHT_PARENT    reduce using rule 2 (expressionList -> expressionList DOT optionalExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 2 (expressionList -> expressionList DOT optionalExpression .)


state 88

    (69) commaExpressionContent -> commaExpressionContent COMMA assignmentExpression .

    COMMA           reduce using rule 69 (commaExpressionContent -> commaExpressionContent COMMA assignmentExpression .)
    DOT             reduce using rule 69 (commaExpressionContent -> commaExpressionContent COMMA assignmentExpression .)
    $end            reduce using rule 69 (commaExpressionContent -> commaExpressionContent COMMA assignmentExpression .)
    RIGHT_PARENT    reduce using rule 69 (commaExpressionContent -> commaExpressionContent COMMA assignmentExpression .)
    RIGHT_BRACKET   reduce using rule 69 (commaExpressionContent -> commaExpressionContent COMMA assignmentExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 69 (commaExpressionContent -> commaExpressionContent COMMA assignmentExpression .)


state 89

    (67) assignmentExpression -> lowPrecedenceExpression ASSIGNMENT assignmentExpression .

    COMMA           reduce using rule 67 (assignmentExpression -> lowPrecedenceExpression ASSIGNMENT assignmentExpression .)
    DOT             reduce using rule 67 (assignmentExpression -> lowPrecedenceExpression ASSIGNMENT assignmentExpression .)
    $end            reduce using rule 67 (assignmentExpression -> lowPrecedenceExpression ASSIGNMENT assignmentExpression .)
    RIGHT_PARENT    reduce using rule 67 (assignmentExpression -> lowPrecedenceExpression ASSIGNMENT assignmentExpression .)
    RIGHT_BRACKET   reduce using rule 67 (assignmentExpression -> lowPrecedenceExpression ASSIGNMENT assignmentExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 67 (assignmentExpression -> lowPrecedenceExpression ASSIGNMENT assignmentExpression .)


state 90

    (64) lowPrecedenceExpression -> lowPrecedenceExpression lowPrecedenceOperator chainExpression .

    ASSIGNMENT      reduce using rule 64 (lowPrecedenceExpression -> lowPrecedenceExpression lowPrecedenceOperator chainExpression .)
    COLON_COLON     reduce using rule 64 (lowPrecedenceExpression -> lowPrecedenceExpression lowPrecedenceOperator chainExpression .)
    COMMA           reduce using rule 64 (lowPrecedenceExpression -> lowPrecedenceExpression lowPrecedenceOperator chainExpression .)
    DOT             reduce using rule 64 (lowPrecedenceExpression -> lowPrecedenceExpression lowPrecedenceOperator chainExpression .)
    $end            reduce using rule 64 (lowPrecedenceExpression -> lowPrecedenceExpression lowPrecedenceOperator chainExpression .)
    RIGHT_PARENT    reduce using rule 64 (lowPrecedenceExpression -> lowPrecedenceExpression lowPrecedenceOperator chainExpression .)
    RIGHT_BRACKET   reduce using rule 64 (lowPrecedenceExpression -> lowPrecedenceExpression lowPrecedenceOperator chainExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 64 (lowPrecedenceExpression -> lowPrecedenceExpression lowPrecedenceOperator chainExpression .)


state 91

    (65) lowPrecedenceOperator -> COLON_COLON anyOperator .

    QUOTE           reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    QUASI_QUOTE     reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    QUASI_UNQUOTE   reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    SPLICE          reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    SINGLE_CHAR_OPERATOR reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    MULTI_CHAR_OPERATOR reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    STAR            reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    KEYWORD         reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    IDENTIFIER      reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    LEFT_PARENT     reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    FLOAT           reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    INTEGER         reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    CHARACTER       reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    STRING          reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    SYMBOL_IDENTIFIER reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    SYMBOL_KEYWORD  reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    SYMBOL_OPERATOR reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    SYMBOL_STRING   reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    LEFT_CURLY_BRACKET reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 65 (lowPrecedenceOperator -> COLON_COLON anyOperator .)


state 92

    (60) chainExpression -> binaryExpression chainedMessageKeyword optionalKeywordChain .

    ASSIGNMENT      reduce using rule 60 (chainExpression -> binaryExpression chainedMessageKeyword optionalKeywordChain .)
    COLON_COLON     reduce using rule 60 (chainExpression -> binaryExpression chainedMessageKeyword optionalKeywordChain .)
    COMMA           reduce using rule 60 (chainExpression -> binaryExpression chainedMessageKeyword optionalKeywordChain .)
    DOT             reduce using rule 60 (chainExpression -> binaryExpression chainedMessageKeyword optionalKeywordChain .)
    $end            reduce using rule 60 (chainExpression -> binaryExpression chainedMessageKeyword optionalKeywordChain .)
    RIGHT_PARENT    reduce using rule 60 (chainExpression -> binaryExpression chainedMessageKeyword optionalKeywordChain .)
    RIGHT_BRACKET   reduce using rule 60 (chainExpression -> binaryExpression chainedMessageKeyword optionalKeywordChain .)
    RIGHT_CURLY_BRACKET reduce using rule 60 (chainExpression -> binaryExpression chainedMessageKeyword optionalKeywordChain .)


state 93

    (48) binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .

    SINGLE_CHAR_OPERATOR reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    MULTI_CHAR_OPERATOR reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    BAR             reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    STAR            reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    LESS_THAN       reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    GREATER_THAN    reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    SEMICOLON       reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    KEYWORD         reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    ASSIGNMENT      reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    COLON_COLON     reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    COMMA           reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    DOT             reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    $end            reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    RIGHT_PARENT    reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    RIGHT_BRACKET   reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    RIGHT_CURLY_BRACKET reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)
    COLON           reduce using rule 48 (binaryExpression -> binaryExpression anyOperator prefixUnaryExpression .)


state 94

    (56) chainedMessages -> chainedMessages SEMICOLON . chainedMessage
    (53) chainedMessage -> . chainedMessageKeyword
    (54) chainedMessage -> . expandableIdentifier
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (43) expandableIdentifier -> . IDENTIFIER
    (44) expandableIdentifier -> . QUASI_UNQUOTE primaryTerm
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (49) chainedMessageArgument -> . KEYWORD binaryExpression

    IDENTIFIER      shift and go to state 67
    QUASI_UNQUOTE   shift and go to state 68
    KEYWORD         shift and go to state 28

    chainedMessage                 shift and go to state 122
    chainedMessageKeyword          shift and go to state 96
    expandableIdentifier           shift and go to state 97
    chainedMessageArguments        shift and go to state 12
    chainedMessageArgument         shift and go to state 15

state 95

    (55) chainedMessages -> SEMICOLON chainedMessage .

    SEMICOLON       reduce using rule 55 (chainedMessages -> SEMICOLON chainedMessage .)
    ASSIGNMENT      reduce using rule 55 (chainedMessages -> SEMICOLON chainedMessage .)
    COLON_COLON     reduce using rule 55 (chainedMessages -> SEMICOLON chainedMessage .)
    COMMA           reduce using rule 55 (chainedMessages -> SEMICOLON chainedMessage .)
    DOT             reduce using rule 55 (chainedMessages -> SEMICOLON chainedMessage .)
    $end            reduce using rule 55 (chainedMessages -> SEMICOLON chainedMessage .)
    RIGHT_PARENT    reduce using rule 55 (chainedMessages -> SEMICOLON chainedMessage .)
    RIGHT_BRACKET   reduce using rule 55 (chainedMessages -> SEMICOLON chainedMessage .)
    RIGHT_CURLY_BRACKET reduce using rule 55 (chainedMessages -> SEMICOLON chainedMessage .)


state 96

    (53) chainedMessage -> chainedMessageKeyword .

    SEMICOLON       reduce using rule 53 (chainedMessage -> chainedMessageKeyword .)
    ASSIGNMENT      reduce using rule 53 (chainedMessage -> chainedMessageKeyword .)
    COLON_COLON     reduce using rule 53 (chainedMessage -> chainedMessageKeyword .)
    COMMA           reduce using rule 53 (chainedMessage -> chainedMessageKeyword .)
    DOT             reduce using rule 53 (chainedMessage -> chainedMessageKeyword .)
    $end            reduce using rule 53 (chainedMessage -> chainedMessageKeyword .)
    RIGHT_PARENT    reduce using rule 53 (chainedMessage -> chainedMessageKeyword .)
    RIGHT_BRACKET   reduce using rule 53 (chainedMessage -> chainedMessageKeyword .)
    RIGHT_CURLY_BRACKET reduce using rule 53 (chainedMessage -> chainedMessageKeyword .)


state 97

    (54) chainedMessage -> expandableIdentifier .

    SEMICOLON       reduce using rule 54 (chainedMessage -> expandableIdentifier .)
    ASSIGNMENT      reduce using rule 54 (chainedMessage -> expandableIdentifier .)
    COLON_COLON     reduce using rule 54 (chainedMessage -> expandableIdentifier .)
    COMMA           reduce using rule 54 (chainedMessage -> expandableIdentifier .)
    DOT             reduce using rule 54 (chainedMessage -> expandableIdentifier .)
    $end            reduce using rule 54 (chainedMessage -> expandableIdentifier .)
    RIGHT_PARENT    reduce using rule 54 (chainedMessage -> expandableIdentifier .)
    RIGHT_BRACKET   reduce using rule 54 (chainedMessage -> expandableIdentifier .)
    RIGHT_CURLY_BRACKET reduce using rule 54 (chainedMessage -> expandableIdentifier .)


state 98

    (18) primaryExpression -> primaryExpression LEFT_PARENT expressionList . RIGHT_PARENT
    (2) expressionList -> expressionList . DOT optionalExpression

    RIGHT_PARENT    shift and go to state 123
    DOT             shift and go to state 43


state 99

    (19) primaryExpression -> primaryExpression LEFT_BRACKET expressionList . RIGHT_BRACKET
    (2) expressionList -> expressionList . DOT optionalExpression

    RIGHT_BRACKET   shift and go to state 124
    DOT             shift and go to state 43


state 100

    (44) expandableIdentifier -> QUASI_UNQUOTE primaryTerm .

    LEFT_PARENT     reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    LEFT_BRACKET    reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    IDENTIFIER      reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    QUASI_UNQUOTE   reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    LEFT_CURLY_BRACKET reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    SINGLE_CHAR_OPERATOR reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    MULTI_CHAR_OPERATOR reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    BAR             reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    STAR            reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    LESS_THAN       reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    GREATER_THAN    reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    SEMICOLON       reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    KEYWORD         reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    ASSIGNMENT      reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    COLON_COLON     reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    COMMA           reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    DOT             reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    $end            reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    RIGHT_PARENT    reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    RIGHT_BRACKET   reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    RIGHT_CURLY_BRACKET reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)
    COLON           reduce using rule 44 (expandableIdentifier -> QUASI_UNQUOTE primaryTerm .)


state 101

    (11) primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .

    LEFT_PARENT     reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    LEFT_BRACKET    reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    IDENTIFIER      reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    QUASI_UNQUOTE   reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    LEFT_CURLY_BRACKET reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    SINGLE_CHAR_OPERATOR reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    MULTI_CHAR_OPERATOR reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    BAR             reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    STAR            reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    LESS_THAN       reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    GREATER_THAN    reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    SEMICOLON       reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    KEYWORD         reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    ASSIGNMENT      reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    COLON_COLON     reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    COMMA           reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    DOT             reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    $end            reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    RIGHT_PARENT    reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    RIGHT_BRACKET   reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    RIGHT_CURLY_BRACKET reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)
    COLON           reduce using rule 11 (primaryTerm -> LEFT_PARENT expression RIGHT_PARENT .)


state 102

    (81) literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .

    LEFT_PARENT     reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    LEFT_BRACKET    reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    IDENTIFIER      reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    QUASI_UNQUOTE   reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    LEFT_CURLY_BRACKET reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    SINGLE_CHAR_OPERATOR reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    MULTI_CHAR_OPERATOR reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    BAR             reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    STAR            reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    LESS_THAN       reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    GREATER_THAN    reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    SEMICOLON       reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    KEYWORD         reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    ASSIGNMENT      reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    COLON_COLON     reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    COMMA           reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    DOT             reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    $end            reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    RIGHT_PARENT    reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    RIGHT_BRACKET   reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    RIGHT_CURLY_BRACKET reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    COLON           reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    FLOAT           reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    INTEGER         reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    CHARACTER       reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    STRING          reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    SYMBOL_IDENTIFIER reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    SYMBOL_KEYWORD  reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    SYMBOL_OPERATOR reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    SYMBOL_STRING   reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    MULTI_KEYWORD   reduce using rule 81 (literal -> LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT .)


state 103

    (83) literalArrayElements -> literalArrayElements literalArrayElement .

    RIGHT_PARENT    reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    IDENTIFIER      reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    LEFT_PARENT     reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    FLOAT           reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    INTEGER         reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    CHARACTER       reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    STRING          reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    SYMBOL_IDENTIFIER reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    SYMBOL_KEYWORD  reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    SYMBOL_OPERATOR reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    SYMBOL_STRING   reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    KEYWORD         reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    MULTI_KEYWORD   reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    SINGLE_CHAR_OPERATOR reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    MULTI_CHAR_OPERATOR reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    BAR             reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    STAR            reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    LESS_THAN       reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)
    GREATER_THAN    reduce using rule 83 (literalArrayElements -> literalArrayElements literalArrayElement .)


state 104

    (84) literalArrayElement -> literal .

    RIGHT_PARENT    reduce using rule 84 (literalArrayElement -> literal .)
    IDENTIFIER      reduce using rule 84 (literalArrayElement -> literal .)
    LEFT_PARENT     reduce using rule 84 (literalArrayElement -> literal .)
    FLOAT           reduce using rule 84 (literalArrayElement -> literal .)
    INTEGER         reduce using rule 84 (literalArrayElement -> literal .)
    CHARACTER       reduce using rule 84 (literalArrayElement -> literal .)
    STRING          reduce using rule 84 (literalArrayElement -> literal .)
    SYMBOL_IDENTIFIER reduce using rule 84 (literalArrayElement -> literal .)
    SYMBOL_KEYWORD  reduce using rule 84 (literalArrayElement -> literal .)
    SYMBOL_OPERATOR reduce using rule 84 (literalArrayElement -> literal .)
    SYMBOL_STRING   reduce using rule 84 (literalArrayElement -> literal .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 84 (literalArrayElement -> literal .)
    KEYWORD         reduce using rule 84 (literalArrayElement -> literal .)
    MULTI_KEYWORD   reduce using rule 84 (literalArrayElement -> literal .)
    SINGLE_CHAR_OPERATOR reduce using rule 84 (literalArrayElement -> literal .)
    MULTI_CHAR_OPERATOR reduce using rule 84 (literalArrayElement -> literal .)
    BAR             reduce using rule 84 (literalArrayElement -> literal .)
    STAR            reduce using rule 84 (literalArrayElement -> literal .)
    LESS_THAN       reduce using rule 84 (literalArrayElement -> literal .)
    GREATER_THAN    reduce using rule 84 (literalArrayElement -> literal .)


state 105

    (85) literalArrayElement -> IDENTIFIER .

    RIGHT_PARENT    reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    LEFT_PARENT     reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    FLOAT           reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    INTEGER         reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    CHARACTER       reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    STRING          reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    SYMBOL_IDENTIFIER reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    SYMBOL_KEYWORD  reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    SYMBOL_OPERATOR reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    SYMBOL_STRING   reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    KEYWORD         reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    MULTI_KEYWORD   reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    SINGLE_CHAR_OPERATOR reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    MULTI_CHAR_OPERATOR reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    BAR             reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    STAR            reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    LESS_THAN       reduce using rule 85 (literalArrayElement -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 85 (literalArrayElement -> IDENTIFIER .)


state 106

    (86) literalArrayElement -> anyKeyword .

    RIGHT_PARENT    reduce using rule 86 (literalArrayElement -> anyKeyword .)
    IDENTIFIER      reduce using rule 86 (literalArrayElement -> anyKeyword .)
    LEFT_PARENT     reduce using rule 86 (literalArrayElement -> anyKeyword .)
    FLOAT           reduce using rule 86 (literalArrayElement -> anyKeyword .)
    INTEGER         reduce using rule 86 (literalArrayElement -> anyKeyword .)
    CHARACTER       reduce using rule 86 (literalArrayElement -> anyKeyword .)
    STRING          reduce using rule 86 (literalArrayElement -> anyKeyword .)
    SYMBOL_IDENTIFIER reduce using rule 86 (literalArrayElement -> anyKeyword .)
    SYMBOL_KEYWORD  reduce using rule 86 (literalArrayElement -> anyKeyword .)
    SYMBOL_OPERATOR reduce using rule 86 (literalArrayElement -> anyKeyword .)
    SYMBOL_STRING   reduce using rule 86 (literalArrayElement -> anyKeyword .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 86 (literalArrayElement -> anyKeyword .)
    KEYWORD         reduce using rule 86 (literalArrayElement -> anyKeyword .)
    MULTI_KEYWORD   reduce using rule 86 (literalArrayElement -> anyKeyword .)
    SINGLE_CHAR_OPERATOR reduce using rule 86 (literalArrayElement -> anyKeyword .)
    MULTI_CHAR_OPERATOR reduce using rule 86 (literalArrayElement -> anyKeyword .)
    BAR             reduce using rule 86 (literalArrayElement -> anyKeyword .)
    STAR            reduce using rule 86 (literalArrayElement -> anyKeyword .)
    LESS_THAN       reduce using rule 86 (literalArrayElement -> anyKeyword .)
    GREATER_THAN    reduce using rule 86 (literalArrayElement -> anyKeyword .)


state 107

    (87) literalArrayElement -> anyOperator .

    RIGHT_PARENT    reduce using rule 87 (literalArrayElement -> anyOperator .)
    IDENTIFIER      reduce using rule 87 (literalArrayElement -> anyOperator .)
    LEFT_PARENT     reduce using rule 87 (literalArrayElement -> anyOperator .)
    FLOAT           reduce using rule 87 (literalArrayElement -> anyOperator .)
    INTEGER         reduce using rule 87 (literalArrayElement -> anyOperator .)
    CHARACTER       reduce using rule 87 (literalArrayElement -> anyOperator .)
    STRING          reduce using rule 87 (literalArrayElement -> anyOperator .)
    SYMBOL_IDENTIFIER reduce using rule 87 (literalArrayElement -> anyOperator .)
    SYMBOL_KEYWORD  reduce using rule 87 (literalArrayElement -> anyOperator .)
    SYMBOL_OPERATOR reduce using rule 87 (literalArrayElement -> anyOperator .)
    SYMBOL_STRING   reduce using rule 87 (literalArrayElement -> anyOperator .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 87 (literalArrayElement -> anyOperator .)
    KEYWORD         reduce using rule 87 (literalArrayElement -> anyOperator .)
    MULTI_KEYWORD   reduce using rule 87 (literalArrayElement -> anyOperator .)
    SINGLE_CHAR_OPERATOR reduce using rule 87 (literalArrayElement -> anyOperator .)
    MULTI_CHAR_OPERATOR reduce using rule 87 (literalArrayElement -> anyOperator .)
    BAR             reduce using rule 87 (literalArrayElement -> anyOperator .)
    STAR            reduce using rule 87 (literalArrayElement -> anyOperator .)
    LESS_THAN       reduce using rule 87 (literalArrayElement -> anyOperator .)
    GREATER_THAN    reduce using rule 87 (literalArrayElement -> anyOperator .)


state 108

    (88) literalArrayElement -> LEFT_PARENT . literalArrayElements RIGHT_PARENT
    (82) literalArrayElements -> .
    (83) literalArrayElements -> . literalArrayElements literalArrayElement

    RIGHT_PARENT    reduce using rule 82 (literalArrayElements -> .)
    IDENTIFIER      reduce using rule 82 (literalArrayElements -> .)
    LEFT_PARENT     reduce using rule 82 (literalArrayElements -> .)
    FLOAT           reduce using rule 82 (literalArrayElements -> .)
    INTEGER         reduce using rule 82 (literalArrayElements -> .)
    CHARACTER       reduce using rule 82 (literalArrayElements -> .)
    STRING          reduce using rule 82 (literalArrayElements -> .)
    SYMBOL_IDENTIFIER reduce using rule 82 (literalArrayElements -> .)
    SYMBOL_KEYWORD  reduce using rule 82 (literalArrayElements -> .)
    SYMBOL_OPERATOR reduce using rule 82 (literalArrayElements -> .)
    SYMBOL_STRING   reduce using rule 82 (literalArrayElements -> .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 82 (literalArrayElements -> .)
    KEYWORD         reduce using rule 82 (literalArrayElements -> .)
    MULTI_KEYWORD   reduce using rule 82 (literalArrayElements -> .)
    SINGLE_CHAR_OPERATOR reduce using rule 82 (literalArrayElements -> .)
    MULTI_CHAR_OPERATOR reduce using rule 82 (literalArrayElements -> .)
    BAR             reduce using rule 82 (literalArrayElements -> .)
    STAR            reduce using rule 82 (literalArrayElements -> .)
    LESS_THAN       reduce using rule 82 (literalArrayElements -> .)
    GREATER_THAN    reduce using rule 82 (literalArrayElements -> .)

    literalArrayElements           shift and go to state 125

state 109

    (108) anyKeyword -> KEYWORD .

    RIGHT_PARENT    reduce using rule 108 (anyKeyword -> KEYWORD .)
    IDENTIFIER      reduce using rule 108 (anyKeyword -> KEYWORD .)
    LEFT_PARENT     reduce using rule 108 (anyKeyword -> KEYWORD .)
    FLOAT           reduce using rule 108 (anyKeyword -> KEYWORD .)
    INTEGER         reduce using rule 108 (anyKeyword -> KEYWORD .)
    CHARACTER       reduce using rule 108 (anyKeyword -> KEYWORD .)
    STRING          reduce using rule 108 (anyKeyword -> KEYWORD .)
    SYMBOL_IDENTIFIER reduce using rule 108 (anyKeyword -> KEYWORD .)
    SYMBOL_KEYWORD  reduce using rule 108 (anyKeyword -> KEYWORD .)
    SYMBOL_OPERATOR reduce using rule 108 (anyKeyword -> KEYWORD .)
    SYMBOL_STRING   reduce using rule 108 (anyKeyword -> KEYWORD .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 108 (anyKeyword -> KEYWORD .)
    KEYWORD         reduce using rule 108 (anyKeyword -> KEYWORD .)
    MULTI_KEYWORD   reduce using rule 108 (anyKeyword -> KEYWORD .)
    SINGLE_CHAR_OPERATOR reduce using rule 108 (anyKeyword -> KEYWORD .)
    MULTI_CHAR_OPERATOR reduce using rule 108 (anyKeyword -> KEYWORD .)
    BAR             reduce using rule 108 (anyKeyword -> KEYWORD .)
    STAR            reduce using rule 108 (anyKeyword -> KEYWORD .)
    LESS_THAN       reduce using rule 108 (anyKeyword -> KEYWORD .)
    GREATER_THAN    reduce using rule 108 (anyKeyword -> KEYWORD .)


state 110

    (109) anyKeyword -> MULTI_KEYWORD .

    RIGHT_PARENT    reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    IDENTIFIER      reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    LEFT_PARENT     reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    FLOAT           reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    INTEGER         reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    CHARACTER       reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    STRING          reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    SYMBOL_IDENTIFIER reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    SYMBOL_KEYWORD  reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    SYMBOL_OPERATOR reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    SYMBOL_STRING   reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    KEYWORD         reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    MULTI_KEYWORD   reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    SINGLE_CHAR_OPERATOR reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    MULTI_CHAR_OPERATOR reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    BAR             reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    STAR            reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    LESS_THAN       reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)
    GREATER_THAN    reduce using rule 109 (anyKeyword -> MULTI_KEYWORD .)


state 111

    (33) block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList . expressionList RIGHT_CURLY_BRACKET
    (27) pragmaList -> pragmaList . pragma
    (1) expressionList -> . optionalExpression
    (2) expressionList -> . expressionList DOT optionalExpression
    (28) pragma -> . LESS_THAN expandableIdentifier GREATER_THAN
    (29) pragma -> . LESS_THAN pragmaKeywordArguments GREATER_THAN
    (3) optionalExpression -> .
    (4) optionalExpression -> . expression
    (72) expression -> . commaExpression
    (70) commaExpression -> . commaExpressionContent
    (71) commaExpression -> . commaExpressionContent COMMA
    (68) commaExpressionContent -> . assignmentExpression
    (69) commaExpressionContent -> . commaExpressionContent COMMA assignmentExpression
    (66) assignmentExpression -> . lowPrecedenceExpression
    (67) assignmentExpression -> . lowPrecedenceExpression ASSIGNMENT assignmentExpression
    (63) lowPrecedenceExpression -> . chainExpression
    (64) lowPrecedenceExpression -> . lowPrecedenceExpression lowPrecedenceOperator chainExpression
    (59) chainExpression -> . binaryExpression optionalKeywordChain
    (60) chainExpression -> . binaryExpression chainedMessageKeyword optionalKeywordChain
    (61) chainExpression -> . chainedMessageKeyword
    (62) chainExpression -> . chainedMessageKeyword chainedMessages
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (49) chainedMessageArgument -> . KEYWORD binaryExpression
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    LESS_THAN       shift and go to state 128
    RIGHT_CURLY_BRACKET reduce using rule 3 (optionalExpression -> .)
    DOT             reduce using rule 3 (optionalExpression -> .)
    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    KEYWORD         shift and go to state 28
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    expressionList                 shift and go to state 126
    pragma                         shift and go to state 127
    optionalExpression             shift and go to state 2
    expression                     shift and go to state 3
    commaExpression                shift and go to state 4
    commaExpressionContent         shift and go to state 5
    assignmentExpression           shift and go to state 6
    lowPrecedenceExpression        shift and go to state 7
    chainExpression                shift and go to state 8
    binaryExpression               shift and go to state 9
    chainedMessageKeyword          shift and go to state 10
    prefixUnaryExpression          shift and go to state 11
    chainedMessageArguments        shift and go to state 12
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    chainedMessageArgument         shift and go to state 15
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 112

    (23) blockClosureHeader -> blockArguments blockResultType . BAR

    BAR             shift and go to state 129


state 113

    (35) blockArguments -> blockArguments blockArgument .

    COLON_COLON     reduce using rule 35 (blockArguments -> blockArguments blockArgument .)
    COLON           reduce using rule 35 (blockArguments -> blockArguments blockArgument .)
    BAR             reduce using rule 35 (blockArguments -> blockArguments blockArgument .)


state 114

    (36) blockArguments -> blockArguments blockGenericArgument .

    COLON_COLON     reduce using rule 36 (blockArguments -> blockArguments blockGenericArgument .)
    COLON           reduce using rule 36 (blockArguments -> blockArguments blockGenericArgument .)
    BAR             reduce using rule 36 (blockArguments -> blockArguments blockGenericArgument .)


state 115

    (42) blockResultType -> COLON_COLON . primaryExpression
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    primaryExpression              shift and go to state 130
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 116

    (40) blockArgument -> COLON . optionalBlockArgumentType expandableIdentifier
    (39) blockGenericArgument -> COLON . STAR optionalBlockArgumentType expandableIdentifier
    (37) optionalBlockArgumentType -> .
    (38) optionalBlockArgumentType -> . LEFT_PARENT expression RIGHT_PARENT

    STAR            shift and go to state 132
    IDENTIFIER      reduce using rule 37 (optionalBlockArgumentType -> .)
    QUASI_UNQUOTE   reduce using rule 37 (optionalBlockArgumentType -> .)
    LEFT_PARENT     shift and go to state 133

    optionalBlockArgumentType      shift and go to state 131

state 117

    (97) makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .

    LEFT_PARENT     reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    LEFT_BRACKET    reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    IDENTIFIER      reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    QUASI_UNQUOTE   reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    LEFT_CURLY_BRACKET reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    SINGLE_CHAR_OPERATOR reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    MULTI_CHAR_OPERATOR reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    BAR             reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    STAR            reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    LESS_THAN       reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    GREATER_THAN    reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    SEMICOLON       reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    KEYWORD         reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    ASSIGNMENT      reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    COLON_COLON     reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    COMMA           reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    DOT             reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    $end            reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    RIGHT_PARENT    reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    RIGHT_BRACKET   reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    RIGHT_CURLY_BRACKET reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)
    COLON           reduce using rule 97 (makeDictionary -> DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET .)


state 118

    (95) dictionaryElements -> dictionaryElements DOT . dictionaryElement
    (96) dictionaryElements -> dictionaryElements DOT .
    (91) dictionaryElement -> . dictionaryKey
    (92) dictionaryElement -> . dictionaryKey expression
    (89) dictionaryKey -> . KEYWORD
    (90) dictionaryKey -> . binaryExpression COLON
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    RIGHT_CURLY_BRACKET reduce using rule 96 (dictionaryElements -> dictionaryElements DOT .)
    DOT             reduce using rule 96 (dictionaryElements -> dictionaryElements DOT .)
    KEYWORD         shift and go to state 84
    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    dictionaryElement              shift and go to state 134
    dictionaryKey                  shift and go to state 83
    binaryExpression               shift and go to state 85
    prefixUnaryExpression          shift and go to state 11
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 119

    (92) dictionaryElement -> dictionaryKey expression .

    RIGHT_CURLY_BRACKET reduce using rule 92 (dictionaryElement -> dictionaryKey expression .)
    DOT             reduce using rule 92 (dictionaryElement -> dictionaryKey expression .)


state 120

    (90) dictionaryKey -> binaryExpression COLON .

    QUOTE           reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    QUASI_QUOTE     reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    QUASI_UNQUOTE   reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    SPLICE          reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    SINGLE_CHAR_OPERATOR reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    MULTI_CHAR_OPERATOR reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    STAR            reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    KEYWORD         reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    IDENTIFIER      reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    LEFT_PARENT     reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    FLOAT           reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    INTEGER         reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    CHARACTER       reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    STRING          reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    SYMBOL_IDENTIFIER reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    SYMBOL_KEYWORD  reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    SYMBOL_OPERATOR reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    SYMBOL_STRING   reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    LEFT_CURLY_BRACKET reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    RIGHT_CURLY_BRACKET reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)
    DOT             reduce using rule 90 (dictionaryKey -> binaryExpression COLON .)


state 121

    (98) makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .

    LEFT_PARENT     reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    IDENTIFIER      reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    QUASI_UNQUOTE   reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    LEFT_CURLY_BRACKET reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    SINGLE_CHAR_OPERATOR reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    MULTI_CHAR_OPERATOR reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    BAR             reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    STAR            reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    KEYWORD         reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    ASSIGNMENT      reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    COLON_COLON     reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    COMMA           reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    DOT             reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    $end            reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    RIGHT_PARENT    reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    RIGHT_CURLY_BRACKET reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)
    COLON           reduce using rule 98 (makeByteArray -> BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET .)


state 122

    (56) chainedMessages -> chainedMessages SEMICOLON chainedMessage .

    SEMICOLON       reduce using rule 56 (chainedMessages -> chainedMessages SEMICOLON chainedMessage .)
    ASSIGNMENT      reduce using rule 56 (chainedMessages -> chainedMessages SEMICOLON chainedMessage .)
    COLON_COLON     reduce using rule 56 (chainedMessages -> chainedMessages SEMICOLON chainedMessage .)
    COMMA           reduce using rule 56 (chainedMessages -> chainedMessages SEMICOLON chainedMessage .)
    DOT             reduce using rule 56 (chainedMessages -> chainedMessages SEMICOLON chainedMessage .)
    $end            reduce using rule 56 (chainedMessages -> chainedMessages SEMICOLON chainedMessage .)
    RIGHT_PARENT    reduce using rule 56 (chainedMessages -> chainedMessages SEMICOLON chainedMessage .)
    RIGHT_BRACKET   reduce using rule 56 (chainedMessages -> chainedMessages SEMICOLON chainedMessage .)
    RIGHT_CURLY_BRACKET reduce using rule 56 (chainedMessages -> chainedMessages SEMICOLON chainedMessage .)


state 123

    (18) primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .

    LEFT_PARENT     reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    LEFT_BRACKET    reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    IDENTIFIER      reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    QUASI_UNQUOTE   reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    LEFT_CURLY_BRACKET reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    SINGLE_CHAR_OPERATOR reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    MULTI_CHAR_OPERATOR reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    BAR             reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    STAR            reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    LESS_THAN       reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    GREATER_THAN    reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    SEMICOLON       reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    KEYWORD         reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    ASSIGNMENT      reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    COLON_COLON     reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    COMMA           reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    DOT             reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    $end            reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    RIGHT_PARENT    reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    RIGHT_BRACKET   reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    RIGHT_CURLY_BRACKET reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)
    COLON           reduce using rule 18 (primaryExpression -> primaryExpression LEFT_PARENT expressionList RIGHT_PARENT .)


state 124

    (19) primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .

    LEFT_PARENT     reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    IDENTIFIER      reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    QUASI_UNQUOTE   reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    LEFT_CURLY_BRACKET reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    SINGLE_CHAR_OPERATOR reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    MULTI_CHAR_OPERATOR reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    BAR             reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    STAR            reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    KEYWORD         reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    ASSIGNMENT      reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    COLON_COLON     reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    COMMA           reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    DOT             reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    $end            reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    RIGHT_PARENT    reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    RIGHT_CURLY_BRACKET reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)
    COLON           reduce using rule 19 (primaryExpression -> primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET .)


state 125

    (88) literalArrayElement -> LEFT_PARENT literalArrayElements . RIGHT_PARENT
    (83) literalArrayElements -> literalArrayElements . literalArrayElement
    (84) literalArrayElement -> . literal
    (85) literalArrayElement -> . IDENTIFIER
    (86) literalArrayElement -> . anyKeyword
    (87) literalArrayElement -> . anyOperator
    (88) literalArrayElement -> . LEFT_PARENT literalArrayElements RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (108) anyKeyword -> . KEYWORD
    (109) anyKeyword -> . MULTI_KEYWORD
    (99) anyOperator -> . SINGLE_CHAR_OPERATOR
    (100) anyOperator -> . MULTI_CHAR_OPERATOR
    (101) anyOperator -> . BAR
    (102) anyOperator -> . STAR
    (103) anyOperator -> . LESS_THAN
    (104) anyOperator -> . GREATER_THAN

    RIGHT_PARENT    shift and go to state 135
    IDENTIFIER      shift and go to state 105
    LEFT_PARENT     shift and go to state 108
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    KEYWORD         shift and go to state 109
    MULTI_KEYWORD   shift and go to state 110
    SINGLE_CHAR_OPERATOR shift and go to state 52
    MULTI_CHAR_OPERATOR shift and go to state 53
    BAR             shift and go to state 54
    STAR            shift and go to state 55
    LESS_THAN       shift and go to state 56
    GREATER_THAN    shift and go to state 57

    literalArrayElement            shift and go to state 103
    literal                        shift and go to state 104
    anyKeyword                     shift and go to state 106
    anyOperator                    shift and go to state 107

state 126

    (33) block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList . RIGHT_CURLY_BRACKET
    (2) expressionList -> expressionList . DOT optionalExpression

    RIGHT_CURLY_BRACKET shift and go to state 136
    DOT             shift and go to state 43


state 127

    (27) pragmaList -> pragmaList pragma .

    LESS_THAN       reduce using rule 27 (pragmaList -> pragmaList pragma .)
    QUOTE           reduce using rule 27 (pragmaList -> pragmaList pragma .)
    QUASI_QUOTE     reduce using rule 27 (pragmaList -> pragmaList pragma .)
    QUASI_UNQUOTE   reduce using rule 27 (pragmaList -> pragmaList pragma .)
    SPLICE          reduce using rule 27 (pragmaList -> pragmaList pragma .)
    SINGLE_CHAR_OPERATOR reduce using rule 27 (pragmaList -> pragmaList pragma .)
    MULTI_CHAR_OPERATOR reduce using rule 27 (pragmaList -> pragmaList pragma .)
    STAR            reduce using rule 27 (pragmaList -> pragmaList pragma .)
    KEYWORD         reduce using rule 27 (pragmaList -> pragmaList pragma .)
    IDENTIFIER      reduce using rule 27 (pragmaList -> pragmaList pragma .)
    LEFT_PARENT     reduce using rule 27 (pragmaList -> pragmaList pragma .)
    FLOAT           reduce using rule 27 (pragmaList -> pragmaList pragma .)
    INTEGER         reduce using rule 27 (pragmaList -> pragmaList pragma .)
    CHARACTER       reduce using rule 27 (pragmaList -> pragmaList pragma .)
    STRING          reduce using rule 27 (pragmaList -> pragmaList pragma .)
    SYMBOL_IDENTIFIER reduce using rule 27 (pragmaList -> pragmaList pragma .)
    SYMBOL_KEYWORD  reduce using rule 27 (pragmaList -> pragmaList pragma .)
    SYMBOL_OPERATOR reduce using rule 27 (pragmaList -> pragmaList pragma .)
    SYMBOL_STRING   reduce using rule 27 (pragmaList -> pragmaList pragma .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 27 (pragmaList -> pragmaList pragma .)
    LEFT_CURLY_BRACKET reduce using rule 27 (pragmaList -> pragmaList pragma .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 27 (pragmaList -> pragmaList pragma .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 27 (pragmaList -> pragmaList pragma .)
    RIGHT_CURLY_BRACKET reduce using rule 27 (pragmaList -> pragmaList pragma .)
    DOT             reduce using rule 27 (pragmaList -> pragmaList pragma .)


state 128

    (28) pragma -> LESS_THAN . expandableIdentifier GREATER_THAN
    (29) pragma -> LESS_THAN . pragmaKeywordArguments GREATER_THAN
    (43) expandableIdentifier -> . IDENTIFIER
    (44) expandableIdentifier -> . QUASI_UNQUOTE primaryTerm
    (31) pragmaKeywordArguments -> . pragmaKeywordArgument
    (32) pragmaKeywordArguments -> . pragmaKeywordArguments pragmaKeywordArgument
    (30) pragmaKeywordArgument -> . KEYWORD primaryExpression

    IDENTIFIER      shift and go to state 67
    QUASI_UNQUOTE   shift and go to state 68
    KEYWORD         shift and go to state 140

    expandableIdentifier           shift and go to state 137
    pragmaKeywordArguments         shift and go to state 138
    pragmaKeywordArgument          shift and go to state 139

state 129

    (23) blockClosureHeader -> blockArguments blockResultType BAR .

    LESS_THAN       reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    QUOTE           reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    QUASI_QUOTE     reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    QUASI_UNQUOTE   reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    SPLICE          reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    SINGLE_CHAR_OPERATOR reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    MULTI_CHAR_OPERATOR reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    STAR            reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    KEYWORD         reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    IDENTIFIER      reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    LEFT_PARENT     reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    FLOAT           reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    INTEGER         reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    CHARACTER       reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    STRING          reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    SYMBOL_IDENTIFIER reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    SYMBOL_KEYWORD  reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    SYMBOL_OPERATOR reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    SYMBOL_STRING   reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    LEFT_CURLY_BRACKET reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    RIGHT_CURLY_BRACKET reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)
    DOT             reduce using rule 23 (blockClosureHeader -> blockArguments blockResultType BAR .)


state 130

    (42) blockResultType -> COLON_COLON primaryExpression .
    (17) primaryExpression -> primaryExpression . expandableIdentifier
    (18) primaryExpression -> primaryExpression . LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> primaryExpression . LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> primaryExpression . block
    (21) primaryExpression -> primaryExpression . makeDictionary
    (22) primaryExpression -> primaryExpression . makeByteArray
    (43) expandableIdentifier -> . IDENTIFIER
    (44) expandableIdentifier -> . QUASI_UNQUOTE primaryTerm
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    BAR             reduce using rule 42 (blockResultType -> COLON_COLON primaryExpression .)
    LEFT_PARENT     shift and go to state 62
    LEFT_BRACKET    shift and go to state 63
    IDENTIFIER      shift and go to state 67
    QUASI_UNQUOTE   shift and go to state 68
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    expandableIdentifier           shift and go to state 61
    block                          shift and go to state 64
    makeDictionary                 shift and go to state 65
    makeByteArray                  shift and go to state 66

state 131

    (40) blockArgument -> COLON optionalBlockArgumentType . expandableIdentifier
    (43) expandableIdentifier -> . IDENTIFIER
    (44) expandableIdentifier -> . QUASI_UNQUOTE primaryTerm

    IDENTIFIER      shift and go to state 67
    QUASI_UNQUOTE   shift and go to state 68

    expandableIdentifier           shift and go to state 141

state 132

    (39) blockGenericArgument -> COLON STAR . optionalBlockArgumentType expandableIdentifier
    (37) optionalBlockArgumentType -> .
    (38) optionalBlockArgumentType -> . LEFT_PARENT expression RIGHT_PARENT

    IDENTIFIER      reduce using rule 37 (optionalBlockArgumentType -> .)
    QUASI_UNQUOTE   reduce using rule 37 (optionalBlockArgumentType -> .)
    LEFT_PARENT     shift and go to state 133

    optionalBlockArgumentType      shift and go to state 142

state 133

    (38) optionalBlockArgumentType -> LEFT_PARENT . expression RIGHT_PARENT
    (72) expression -> . commaExpression
    (70) commaExpression -> . commaExpressionContent
    (71) commaExpression -> . commaExpressionContent COMMA
    (68) commaExpressionContent -> . assignmentExpression
    (69) commaExpressionContent -> . commaExpressionContent COMMA assignmentExpression
    (66) assignmentExpression -> . lowPrecedenceExpression
    (67) assignmentExpression -> . lowPrecedenceExpression ASSIGNMENT assignmentExpression
    (63) lowPrecedenceExpression -> . chainExpression
    (64) lowPrecedenceExpression -> . lowPrecedenceExpression lowPrecedenceOperator chainExpression
    (59) chainExpression -> . binaryExpression optionalKeywordChain
    (60) chainExpression -> . binaryExpression chainedMessageKeyword optionalKeywordChain
    (61) chainExpression -> . chainedMessageKeyword
    (62) chainExpression -> . chainedMessageKeyword chainedMessages
    (47) binaryExpression -> . prefixUnaryExpression
    (48) binaryExpression -> . binaryExpression anyOperator prefixUnaryExpression
    (52) chainedMessageKeyword -> . chainedMessageArguments
    (45) prefixUnaryExpression -> . primaryExpression
    (46) prefixUnaryExpression -> . anyPrefixOperator prefixUnaryExpression
    (50) chainedMessageArguments -> . chainedMessageArgument
    (51) chainedMessageArguments -> . chainedMessageArguments chainedMessageArgument
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (105) anyPrefixOperator -> . SINGLE_CHAR_OPERATOR
    (106) anyPrefixOperator -> . MULTI_CHAR_OPERATOR
    (107) anyPrefixOperator -> . STAR
    (49) chainedMessageArgument -> . KEYWORD binaryExpression
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    SINGLE_CHAR_OPERATOR shift and go to state 25
    MULTI_CHAR_OPERATOR shift and go to state 26
    STAR            shift and go to state 27
    KEYWORD         shift and go to state 28
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    expression                     shift and go to state 143
    commaExpression                shift and go to state 4
    commaExpressionContent         shift and go to state 5
    assignmentExpression           shift and go to state 6
    lowPrecedenceExpression        shift and go to state 7
    chainExpression                shift and go to state 8
    binaryExpression               shift and go to state 9
    chainedMessageKeyword          shift and go to state 10
    prefixUnaryExpression          shift and go to state 11
    chainedMessageArguments        shift and go to state 12
    primaryExpression              shift and go to state 13
    anyPrefixOperator              shift and go to state 14
    chainedMessageArgument         shift and go to state 15
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 134

    (95) dictionaryElements -> dictionaryElements DOT dictionaryElement .

    RIGHT_CURLY_BRACKET reduce using rule 95 (dictionaryElements -> dictionaryElements DOT dictionaryElement .)
    DOT             reduce using rule 95 (dictionaryElements -> dictionaryElements DOT dictionaryElement .)


state 135

    (88) literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .

    RIGHT_PARENT    reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    IDENTIFIER      reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    LEFT_PARENT     reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    FLOAT           reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    INTEGER         reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    CHARACTER       reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    STRING          reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    SYMBOL_IDENTIFIER reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    SYMBOL_KEYWORD  reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    SYMBOL_OPERATOR reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    SYMBOL_STRING   reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    KEYWORD         reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    MULTI_KEYWORD   reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    SINGLE_CHAR_OPERATOR reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    MULTI_CHAR_OPERATOR reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    BAR             reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    STAR            reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    LESS_THAN       reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)
    GREATER_THAN    reduce using rule 88 (literalArrayElement -> LEFT_PARENT literalArrayElements RIGHT_PARENT .)


state 136

    (33) block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .

    LEFT_PARENT     reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    LEFT_BRACKET    reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    IDENTIFIER      reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    QUASI_UNQUOTE   reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    LEFT_CURLY_BRACKET reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    SINGLE_CHAR_OPERATOR reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    MULTI_CHAR_OPERATOR reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    BAR             reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    STAR            reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    LESS_THAN       reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    GREATER_THAN    reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    SEMICOLON       reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    KEYWORD         reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    ASSIGNMENT      reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    COLON_COLON     reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    COMMA           reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    DOT             reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    $end            reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    RIGHT_PARENT    reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    RIGHT_BRACKET   reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    RIGHT_CURLY_BRACKET reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)
    COLON           reduce using rule 33 (block -> LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET .)


state 137

    (28) pragma -> LESS_THAN expandableIdentifier . GREATER_THAN

    GREATER_THAN    shift and go to state 144


state 138

    (29) pragma -> LESS_THAN pragmaKeywordArguments . GREATER_THAN
    (32) pragmaKeywordArguments -> pragmaKeywordArguments . pragmaKeywordArgument
    (30) pragmaKeywordArgument -> . KEYWORD primaryExpression

    GREATER_THAN    shift and go to state 145
    KEYWORD         shift and go to state 140

    pragmaKeywordArgument          shift and go to state 146

state 139

    (31) pragmaKeywordArguments -> pragmaKeywordArgument .

    GREATER_THAN    reduce using rule 31 (pragmaKeywordArguments -> pragmaKeywordArgument .)
    KEYWORD         reduce using rule 31 (pragmaKeywordArguments -> pragmaKeywordArgument .)


state 140

    (30) pragmaKeywordArgument -> KEYWORD . primaryExpression
    (12) primaryExpression -> . primaryTerm
    (13) primaryExpression -> . QUOTE primaryTerm
    (14) primaryExpression -> . QUASI_QUOTE primaryTerm
    (15) primaryExpression -> . QUASI_UNQUOTE primaryTerm
    (16) primaryExpression -> . SPLICE primaryTerm
    (17) primaryExpression -> . primaryExpression expandableIdentifier
    (18) primaryExpression -> . primaryExpression LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> . primaryExpression LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> . primaryExpression block
    (21) primaryExpression -> . primaryExpression makeDictionary
    (22) primaryExpression -> . primaryExpression makeByteArray
    (5) primaryTerm -> . IDENTIFIER
    (6) primaryTerm -> . literal
    (7) primaryTerm -> . block
    (8) primaryTerm -> . makeDictionary
    (9) primaryTerm -> . makeByteArray
    (10) primaryTerm -> . LEFT_PARENT RIGHT_PARENT
    (11) primaryTerm -> . LEFT_PARENT expression RIGHT_PARENT
    (73) literal -> . FLOAT
    (74) literal -> . INTEGER
    (75) literal -> . CHARACTER
    (76) literal -> . STRING
    (77) literal -> . SYMBOL_IDENTIFIER
    (78) literal -> . SYMBOL_KEYWORD
    (79) literal -> . SYMBOL_OPERATOR
    (80) literal -> . SYMBOL_STRING
    (81) literal -> . LITERAL_ARRAY_LEFT_PARENT literalArrayElements RIGHT_PARENT
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    QUOTE           shift and go to state 17
    QUASI_QUOTE     shift and go to state 18
    QUASI_UNQUOTE   shift and go to state 19
    SPLICE          shift and go to state 20
    IDENTIFIER      shift and go to state 29
    LEFT_PARENT     shift and go to state 21
    FLOAT           shift and go to state 31
    INTEGER         shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    SYMBOL_IDENTIFIER shift and go to state 35
    SYMBOL_KEYWORD  shift and go to state 36
    SYMBOL_OPERATOR shift and go to state 37
    SYMBOL_STRING   shift and go to state 38
    LITERAL_ARRAY_LEFT_PARENT shift and go to state 39
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    primaryExpression              shift and go to state 147
    primaryTerm                    shift and go to state 16
    block                          shift and go to state 22
    makeDictionary                 shift and go to state 23
    makeByteArray                  shift and go to state 24
    literal                        shift and go to state 30

state 141

    (40) blockArgument -> COLON optionalBlockArgumentType expandableIdentifier .

    COLON_COLON     reduce using rule 40 (blockArgument -> COLON optionalBlockArgumentType expandableIdentifier .)
    COLON           reduce using rule 40 (blockArgument -> COLON optionalBlockArgumentType expandableIdentifier .)
    BAR             reduce using rule 40 (blockArgument -> COLON optionalBlockArgumentType expandableIdentifier .)


state 142

    (39) blockGenericArgument -> COLON STAR optionalBlockArgumentType . expandableIdentifier
    (43) expandableIdentifier -> . IDENTIFIER
    (44) expandableIdentifier -> . QUASI_UNQUOTE primaryTerm

    IDENTIFIER      shift and go to state 67
    QUASI_UNQUOTE   shift and go to state 68

    expandableIdentifier           shift and go to state 148

state 143

    (38) optionalBlockArgumentType -> LEFT_PARENT expression . RIGHT_PARENT

    RIGHT_PARENT    shift and go to state 149


state 144

    (28) pragma -> LESS_THAN expandableIdentifier GREATER_THAN .

    LESS_THAN       reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    QUOTE           reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    QUASI_QUOTE     reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    QUASI_UNQUOTE   reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    SPLICE          reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    SINGLE_CHAR_OPERATOR reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    MULTI_CHAR_OPERATOR reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    STAR            reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    KEYWORD         reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    IDENTIFIER      reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    LEFT_PARENT     reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    FLOAT           reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    INTEGER         reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    CHARACTER       reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    STRING          reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    SYMBOL_IDENTIFIER reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    SYMBOL_KEYWORD  reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    SYMBOL_OPERATOR reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    SYMBOL_STRING   reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    LEFT_CURLY_BRACKET reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    RIGHT_CURLY_BRACKET reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)
    DOT             reduce using rule 28 (pragma -> LESS_THAN expandableIdentifier GREATER_THAN .)


state 145

    (29) pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .

    LESS_THAN       reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    QUOTE           reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    QUASI_QUOTE     reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    QUASI_UNQUOTE   reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    SPLICE          reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    SINGLE_CHAR_OPERATOR reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    MULTI_CHAR_OPERATOR reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    STAR            reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    KEYWORD         reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    IDENTIFIER      reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    LEFT_PARENT     reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    FLOAT           reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    INTEGER         reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    CHARACTER       reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    STRING          reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    SYMBOL_IDENTIFIER reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    SYMBOL_KEYWORD  reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    SYMBOL_OPERATOR reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    SYMBOL_STRING   reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    LITERAL_ARRAY_LEFT_PARENT reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    LEFT_CURLY_BRACKET reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    BYTE_ARRAY_LEFT_BRACKET reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    RIGHT_CURLY_BRACKET reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)
    DOT             reduce using rule 29 (pragma -> LESS_THAN pragmaKeywordArguments GREATER_THAN .)


state 146

    (32) pragmaKeywordArguments -> pragmaKeywordArguments pragmaKeywordArgument .

    GREATER_THAN    reduce using rule 32 (pragmaKeywordArguments -> pragmaKeywordArguments pragmaKeywordArgument .)
    KEYWORD         reduce using rule 32 (pragmaKeywordArguments -> pragmaKeywordArguments pragmaKeywordArgument .)


state 147

    (30) pragmaKeywordArgument -> KEYWORD primaryExpression .
    (17) primaryExpression -> primaryExpression . expandableIdentifier
    (18) primaryExpression -> primaryExpression . LEFT_PARENT expressionList RIGHT_PARENT
    (19) primaryExpression -> primaryExpression . LEFT_BRACKET expressionList RIGHT_BRACKET
    (20) primaryExpression -> primaryExpression . block
    (21) primaryExpression -> primaryExpression . makeDictionary
    (22) primaryExpression -> primaryExpression . makeByteArray
    (43) expandableIdentifier -> . IDENTIFIER
    (44) expandableIdentifier -> . QUASI_UNQUOTE primaryTerm
    (33) block -> . LEFT_CURLY_BRACKET optionalBlockClosureHeader pragmaList expressionList RIGHT_CURLY_BRACKET
    (97) makeDictionary -> . DICTIONARY_ARRAY_LEFT_CURLY_BRACKET dictionaryElements RIGHT_CURLY_BRACKET
    (98) makeByteArray -> . BYTE_ARRAY_LEFT_BRACKET expressionList RIGHT_BRACKET

    GREATER_THAN    reduce using rule 30 (pragmaKeywordArgument -> KEYWORD primaryExpression .)
    KEYWORD         reduce using rule 30 (pragmaKeywordArgument -> KEYWORD primaryExpression .)
    LEFT_PARENT     shift and go to state 62
    LEFT_BRACKET    shift and go to state 63
    IDENTIFIER      shift and go to state 67
    QUASI_UNQUOTE   shift and go to state 68
    LEFT_CURLY_BRACKET shift and go to state 40
    DICTIONARY_ARRAY_LEFT_CURLY_BRACKET shift and go to state 41
    BYTE_ARRAY_LEFT_BRACKET shift and go to state 42

    expandableIdentifier           shift and go to state 61
    block                          shift and go to state 64
    makeDictionary                 shift and go to state 65
    makeByteArray                  shift and go to state 66

state 148

    (39) blockGenericArgument -> COLON STAR optionalBlockArgumentType expandableIdentifier .

    COLON_COLON     reduce using rule 39 (blockGenericArgument -> COLON STAR optionalBlockArgumentType expandableIdentifier .)
    COLON           reduce using rule 39 (blockGenericArgument -> COLON STAR optionalBlockArgumentType expandableIdentifier .)
    BAR             reduce using rule 39 (blockGenericArgument -> COLON STAR optionalBlockArgumentType expandableIdentifier .)


state 149

    (38) optionalBlockArgumentType -> LEFT_PARENT expression RIGHT_PARENT .

    IDENTIFIER      reduce using rule 38 (optionalBlockArgumentType -> LEFT_PARENT expression RIGHT_PARENT .)
    QUASI_UNQUOTE   reduce using rule 38 (optionalBlockArgumentType -> LEFT_PARENT expression RIGHT_PARENT .)

